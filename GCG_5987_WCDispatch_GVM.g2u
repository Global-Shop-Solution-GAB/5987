Program.Sub.ScreenSU.Start
Gui.FrmMaster..Create(DashForm)
Gui.FrmMaster..Size(15330,8760)
Gui.FrmMaster..MinX(15330)
Gui.FrmMaster..MinY(8760)
Gui.FrmMaster..Position(0,0)
Gui.FrmMaster..BackColor(-2147483633)
Gui.FrmMaster..MousePointer(0)
Gui.FrmMaster..Event(UnLoad,FrmMaster_UnLoad)
Gui.FrmMaster..Caption("WC Dispatch Dashboard")
Gui.FrmMaster..AlwaysOnTop(False)
Gui.FrmMaster..FontName("Tahoma")
Gui.FrmMaster..FontSize(8.25)
Gui.FrmMaster..ControlBox(True)
Gui.FrmMaster..MaxButton(True)
Gui.FrmMaster..MinButton(True)
Gui.FrmMaster..Moveable(True)
Gui.FrmMaster..Sizeable(True)
Gui.FrmMaster..ShowInTaskBar(True)
Gui.FrmMaster..TitleBar(True)
Gui.FrmMaster..BarRefreshButton(True)
Gui.FrmMaster..Event(RefreshClick,cmdRefresh_Click)
Gui.FrmMaster..BarExportButton(True)
Gui.FrmMaster..Event(ExportClick,cmdExport_Click)
Gui.FrmMaster..BarPrintButton(True)
Gui.FrmMaster..Event(PrintClick,cmdPrint_Click)
Gui.FrmMaster.lblStatus.Create(Label,"****Change****",False,1035,210,0,10545,90,True,0,"Arial",8,-986896,0,0)
Gui.FrmMaster.lblStatus.BorderStyle(0)
Gui.FrmMaster.pbStatus.Create(ProgressBar)
Gui.FrmMaster.pbStatus.Size(3735,255)
Gui.FrmMaster.pbStatus.Position(10545,330)
Gui.FrmMaster.pbStatus.Visible(True)
Gui.FrmMaster.framePermissions.Create(Frame)
Gui.FrmMaster.framePermissions.Size(10305,450)
Gui.FrmMaster.framePermissions.Position(60,195)
Gui.FrmMaster.framePermissions.Enabled(True)
Gui.FrmMaster.framePermissions.Visible(True)
Gui.FrmMaster.framePermissions.Zorder(0)
Gui.FrmMaster.framePermissions.Caption("")
Gui.FrmMaster.framePermissions.FontName("Tahoma")
Gui.FrmMaster.framePermissions.FontSize(8.25)
Gui.FrmMaster.optView.Create(Option)
Gui.FrmMaster.optView.Size(705,255)
Gui.FrmMaster.optView.Position(4920,105)
Gui.FrmMaster.optView.Caption("View")
Gui.FrmMaster.optView.Parent("framePermissions")
Gui.FrmMaster.optView.Enabled(True)
Gui.FrmMaster.optView.Visible(True)
Gui.FrmMaster.optView.Zorder(0)
Gui.FrmMaster.optView.FontName("Tahoma")
Gui.FrmMaster.optView.FontSize(8.25)
Gui.FrmMaster.optEdit.Create(Option)
Gui.FrmMaster.optEdit.Enabled(False)
Gui.FrmMaster.optEdit.Size(720,255)
Gui.FrmMaster.optEdit.Position(5700,105)
Gui.FrmMaster.optEdit.Caption("Edit")
Gui.FrmMaster.optEdit.Parent("framePermissions")
Gui.FrmMaster.optEdit.Visible(True)
Gui.FrmMaster.optEdit.Zorder(0)
Gui.FrmMaster.optEdit.FontName("Tahoma")
Gui.FrmMaster.optEdit.FontSize(8.25)
Gui.FrmMaster.tabMaster.Create(Tab)
Gui.FrmMaster.tabMaster.Size(15195,7725)
Gui.FrmMaster.tabMaster.Position(15,705)
Gui.FrmMaster.tabMaster.Enabled(True)
Gui.FrmMaster.tabMaster.Visible(True)
Gui.FrmMaster.tabMaster.Zorder(0)
Gui.FrmMaster.tabMaster.FontName("Tahoma")
Gui.FrmMaster.tabMaster.FontSize(8.25)
Gui.FrmMaster.tabMaster.Tabs(1)
Gui.FrmMaster.tabMaster.SetTab(0)
Gui.FrmMaster.tabMaster.Caption("All Jobs")
Gui.FrmMaster.GsGCAll.Create(GsGridControl)
Gui.FrmMaster.GsGCAll.Size(15150,6600)
Gui.FrmMaster.GsGCAll.Position(0,-15)
Gui.FrmMaster.GsGCAll.Event(RowCellClick,GsGCAll_RowCellClick)
Gui.FrmMaster.GsGCAll.Event(CellValueChanged,GsGCAll_CellValueChanged)
Gui.FrmMaster.GsGCAll.Parent("tabMaster",0)
Gui.FrmMaster.GsGCAll.Enabled(True)
Gui.FrmMaster.GsGCAll.Visible(True)
Gui.FrmMaster.GsGCAll.Zorder(0)
Gui.FrmMaster.dtpCutDt.Create(DatePicker)
Gui.FrmMaster.dtpCutDt.Size(1425,285)
Gui.FrmMaster.dtpCutDt.Position(7635,285)
Gui.FrmMaster.dtpCutDt.Event(Change,dtpCutDt_Change)
Gui.FrmMaster.dtpCutDt.Enabled(True)
Gui.FrmMaster.dtpCutDt.Visible(True)
Gui.FrmMaster.dtpCutDt.Zorder(0)
Gui.FrmMaster.dtpCutDt.CheckBox(False)
Gui.FrmMaster.dtpCutDt.FontName("Tahoma")
Gui.FrmMaster.dtpCutDt.FontSize(8.25)
Gui.FrmMaster.lblCutDt.Create(Label,"Cutoff Date:",True,870,210,0,6675,330,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmMaster.lblCutDt.BorderStyle(0)
Gui.FrmMaster.chkBarcode.Create(CheckBox)
Gui.FrmMaster.chkBarcode.Size(1695,300)
Gui.FrmMaster.chkBarcode.Position(90,270)
Gui.FrmMaster.chkBarcode.Caption("Print WC Dispatch")
Gui.FrmMaster.chkBarcode.Event(Click,SavePrint)
Gui.FrmMaster.chkBarcode.Enabled(True)
Gui.FrmMaster.chkBarcode.Visible(True)
Gui.FrmMaster.chkBarcode.Zorder(0)
Gui.FrmMaster.chkBarcode.FontName("Tahoma")
Gui.FrmMaster.chkBarcode.FontSize(8.25)
Gui.FrmMaster.chkPicklist.Create(CheckBox)
Gui.FrmMaster.chkPicklist.Size(1905,300)
Gui.FrmMaster.chkPicklist.Position(1785,270)
Gui.FrmMaster.chkPicklist.Caption("Print Material Picklist")
Gui.FrmMaster.chkPicklist.Event(Click,SavePrint)
Gui.FrmMaster.chkPicklist.Enabled(True)
Gui.FrmMaster.chkPicklist.Visible(True)
Gui.FrmMaster.chkPicklist.Zorder(0)
Gui.FrmMaster.chkPicklist.FontName("Tahoma")
Gui.FrmMaster.chkPicklist.FontSize(8.25)
Gui.FrmMaster.lblMatAvail.Create(Label,"**Hit Refresh to check for Material Availability**",False,3375,210,0,10545,675,True,0,"Arial",8,9498256,0,0)
Gui.FrmMaster.lblMatAvail.BorderStyle(0)
Gui.FrmMaster.txtCutDays.Create(TextBox,"",True,510,300,0,9750,285,True,0,"Arial",8,-2147483643,1)
Gui.FrmMaster.txtCutDays.MaxLength(2)
Gui.FrmMaster.txtCutDays.NumericOnly(True)
Gui.FrmMaster.txtCutDays.Event(Change,txtCutDays_Change)
Gui.FrmMaster.lblCutDay.Create(Label,"Days:",True,420,210,0,9195,330,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmMaster.lblCutDay.BorderStyle(0)
Gui.FrmMaster.chkpicklist2.Create(CheckBox)
Gui.FrmMaster.chkpicklist2.Enabled(True)
Gui.FrmMaster.chkpicklist2.Visible(True)
Gui.FrmMaster.chkpicklist2.Zorder(0)
Gui.FrmMaster.chkpicklist2.Size(1200,300)
Gui.FrmMaster.chkpicklist2.Position(3720,285)
Gui.FrmMaster.chkpicklist2.Caption("Print Pull list")
Gui.FrmMaster.chkpicklist2.FontName("Tahoma")
Gui.FrmMaster.chkpicklist2.FontSize(8.25)
Gui.FrmMaster.chkpicklist2.Event(Click,SavePrint)
Gui.frmWeb..Create(BaseForm)
Gui.frmWeb..Caption("Global Shop Solutions - Web Sites")
Gui.frmWeb..Size(3990,2025)
Gui.frmWeb..MinX(0)
Gui.frmWeb..MinY(0)
Gui.frmWeb..Position(0,0)
Gui.frmWeb..BackColor(-2147483633)
Gui.frmWeb..MousePointer(0)
Gui.frmWeb..MaxButton(False)
Gui.frmWeb..Sizeable(False)
Gui.frmWeb..Event(UnLoad,frmWeb_UnLoad)
Gui.frmWeb..MinButton(False)
Gui.frmWeb..AlwaysOnTop(False)
Gui.frmWeb..FontName("Tahoma")
Gui.frmWeb..FontSize(8.25)
Gui.frmWeb..ControlBox(True)
Gui.frmWeb..Moveable(True)
Gui.frmWeb..ShowInTaskBar(True)
Gui.frmWeb..TitleBar(True)
Gui.frmWeb.cmdGSS.Create(Button)
Gui.frmWeb.cmdGSS.Size(3615,375)
Gui.frmWeb.cmdGSS.Position(120,45)
Gui.frmWeb.cmdGSS.Caption("Global Shop Solutions")
Gui.frmWeb.cmdGSS.Event(Click,cmdGSS_Click)
Gui.frmWeb.cmdGSS.Enabled(True)
Gui.frmWeb.cmdGSS.Visible(True)
Gui.frmWeb.cmdGSS.Zorder(0)
Gui.frmWeb.cmdGSS.FontName("Tahoma")
Gui.frmWeb.cmdGSS.FontSize(8.25)
Gui.frmWeb.cmdServ.Create(Button)
Gui.frmWeb.cmdServ.Size(3615,375)
Gui.frmWeb.cmdServ.Position(120,450)
Gui.frmWeb.cmdServ.Caption("ServiceWeb")
Gui.frmWeb.cmdServ.Event(Click,cmdServ_Click)
Gui.frmWeb.cmdServ.Enabled(True)
Gui.frmWeb.cmdServ.Visible(True)
Gui.frmWeb.cmdServ.Zorder(0)
Gui.frmWeb.cmdServ.FontName("Tahoma")
Gui.frmWeb.cmdServ.FontSize(8.25)
Gui.frmWeb.cmdUpd.Create(Button)
Gui.frmWeb.cmdUpd.Size(3615,375)
Gui.frmWeb.cmdUpd.Position(120,855)
Gui.frmWeb.cmdUpd.Caption("GSS Updates")
Gui.frmWeb.cmdUpd.Event(Click,cmdUpd_Click)
Gui.frmWeb.cmdUpd.Enabled(True)
Gui.frmWeb.cmdUpd.Visible(True)
Gui.frmWeb.cmdUpd.Zorder(0)
Gui.frmWeb.cmdUpd.FontName("Tahoma")
Gui.frmWeb.cmdUpd.FontSize(8.25)
Gui.frmWeb.cmdResetGsGC.Create(Button)
Gui.frmWeb.cmdResetGsGC.Size(3615,375)
Gui.frmWeb.cmdResetGsGC.Position(120,1260)
Gui.frmWeb.cmdResetGsGC.Caption("Reset All Columns")
Gui.frmWeb.cmdResetGsGC.Event(Click,cmdResetGsGC_Click)
Gui.frmWeb.cmdResetGsGC.Enabled(True)
Gui.frmWeb.cmdResetGsGC.Visible(True)
Gui.frmWeb.cmdResetGsGC.Zorder(0)
Gui.frmWeb.cmdResetGsGC.FontName("Tahoma")
Gui.frmWeb.cmdResetGsGC.FontSize(8.25)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.bExists.Declare
	V.Global.bEdit.Declare
	V.Global.bLongPart.Declare
	V.Global.sWCList.Declare
Program.Sub.Preflight.End
Program.Sub.Main.Start
'Customer has an agile shop floor and needs the ability to move jobs around quickly, both within the same workcenter and between different workcenters. 
'After jobs are positioned properly according to the production scheduler, the shop floor needs a barcoded dispatch report in order to run efficiently.

'Solution

'Create a new custom dashboard of open jobs with the ability to move jobs up and down on a workcenter, to the top or bottom of a workcenter, or between workcenters. 
'Give the dashboard the ability to export to Excel, print a custom barcoded dispatch report, and print a custom master schedule report.

F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bEditGrp.Declare
	V.Local.bIssueGrp.Declare
	V.Local.bWiptoFG.Declare
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	V.Local.dCutDt.Declare
	V.Local.sRet.Declare
	V.Local.iDays.Declare
	
	'F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
	F.Intrinsic.String.Build("{0}\GAB\GAS\GAB_GSS_Logo_Green_Dash.png",V.Caller.PluginsDir,V.Local.sGssLogo)
	'Gui.frmWeb..Icon(V.Local.sIcon)
	'Gui.FrmMaster..Icon(V.Local.sIcon)
'	Gui.FrmMaster.picGSSLogo.Picture(V.Local.sGssLogo)
	F.Intrinsic.Control.CallSub(SetContextMenus)

	Gui.FrmMaster.tabMaster.SetTab(0)
	Gui.FrmMaster.optEdit.Value(False)
	Gui.FrmMaster.optView.Value(True)

	'Pull Cutoff Days from GS_Registry
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,5,"",V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,=,"Cutoff Days")
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,1,"",V.Local.iDays)
		F.Intrinsic.Date.DateAdd("D",V.Local.iDays,V.Ambient.Date,V.Local.dCutDt)
		Gui.FrmMaster.txtCutDays.Text(V.Local.iDays)
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.DateAdd("D",7,V.Ambient.Date,V.Local.dCutDt)
		Gui.FrmMaster.txtCutDays.Text("7")
	F.Intrinsic.Control.EndIf
	Gui.FrmMaster.dtpCutDt.Value(V.Local.dCutDt)
	F.Intrinsic.Control.UnBlockEvents
	
	Gui.FrmMaster.optEdit.Enabled(True)

'	'Check User Permissions
'	F.Global.Security.IsInGroup(v.Caller.User,"EditWO",V.Local.bEditGrp)
'	F.Intrinsic.Control.If(v.Local.bEditGrp,=,True)
'		Gui.FrmMaster.optEdit.Enabled(True)
'		Gui.FrmMaster.cmdNew.Enabled(True)
'		Gui.FrmMaster.chkBarcode.Enabled(True)
'		Gui.FrmMaster.chkPicklist.Enabled(True)
'		V.Global.bEdit.Set(True)
'	F.Intrinsic.Control.EndIf
	
	Function.Global.Security.CheckUserAccessIPM(527,1,v.Global.bEdit)'Shop Floor Control > File > Work Orders > Open
	f.Intrinsic.Control.If(v.Global.bEdit)
	Gui.FrmMaster.optEdit.Enabled(True)
	gui.FrmMaster.optEdit.Value(True)
'	Gui.FrmMaster.cmdNew.Enabled(True)
	Gui.FrmMaster.chkBarcode.Enabled(True)
	Gui.FrmMaster.chkPicklist.Enabled(True)
	Gui.FrmMaster.chkPicklist2.Enabled(True)
	f.Intrinsic.Control.EndIf

	F.ODBC.Connection!con.OpenCompanyConnection(600)
	F.Intrinsic.Control.CallSub(checktable)	
	F.Intrinsic.Control.CallSub(CheckLongPart)
	F.Intrinsic.Control.CallSub(checkprint)	
		
	Gui.FrmMaster..Show	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.CallSub(lockscreen)	
	F.Intrinsic.Control.CallSub(SetAnchors)
	
	'Load data
	Gui.FrmMaster.GsGCAll.Visible(False)

	F.Intrinsic.Control.CallSub("LoadDDLists")
	F.Intrinsic.Control.CallSub("loaddtdvall")
'	F.Intrinsic.Control.CallSub("loaddtmj")
'	F.Intrinsic.Control.CallSub("loaddtms")
'	F.Intrinsic.Control.CallSub("loaddtindwos")
'	f.Intrinsic.Control.CallSub("Color_Ready_And_FullAllocated")	
	F.Intrinsic.Control.CallSub("Deserialize")		
	F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.UnBlockEvents
	Gui.FrmMaster.GsGCAll.Visible(True)
		

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.UnLoad.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	F.Intrinsic.Control.If(V.ODBC.con.State,=,1)
		F.ODBC.Connection!con.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End	
F.Intrinsic.Control.EndTry
Program.Sub.UnLoad.End

Program.Sub.LockScreen.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
'	Gui.FrmMaster.frameButtons.Enabled(False)
	Gui.FrmMaster.framePermissions.Enabled(False)
	Gui.FrmMaster.dtpCutDt.Enabled(False)
	Gui.FrmMaster.txtCutDays.Enabled(False)
	Gui.FrmMaster.chkBarcode.Enabled(False)
	Gui.FrmMaster.chkPicklist.Enabled(False)
	Gui.FrmMaster.chkPicklist2.Enabled(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LockScreen.End

Program.Sub.EnableScreen.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
'	Gui.FrmMaster.frameButtons.Enabled(True)
	Gui.FrmMaster.framePermissions.Enabled(True)	
	Gui.FrmMaster.dtpCutDt.Enabled(True)
	Gui.FrmMaster.txtCutDays.Enabled(True)
	Gui.FrmMaster.chkBarcode.Enabled(True)
	Gui.FrmMaster.chkPicklist.Enabled(True)
	Gui.FrmMaster.chkPicklist2.Enabled(True)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.EnableScreen.End

Program.Sub.SetAnchors.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'0 - None 	'1 - Top 	'2 - Bottom 	'4 - Left 	'8 - Right
	Gui.FrmMaster.tabMaster.Anchor(15)
'	Gui.FrmMaster.picGSSLogo.Anchor(1)
'	Gui.FrmMaster.frameButtons.Anchor(5)
	Gui.FrmMaster.framePermissions.Anchor(5)
'	Gui.FrmMaster.frameTotals.Anchor(10)
'	Gui.FrmMaster.lblBegDt.Anchor(5)
'	Gui.FrmMaster.dtpBegDt.Anchor(5)
	gui.FrmMaster.lblCutDt.Anchor(5)
	gui.FrmMaster.dtpCutDt.Anchor(5)
	Gui.FrmMaster.chkBarcode.Anchor(5)
	Gui.FrmMaster.chkPicklist.Anchor(5)
	Gui.FrmMaster.chkPicklist2.Anchor(5)
	Gui.FrmMaster.lblCutDay.Anchor(5)
	Gui.FrmMaster.txtCutDays.Anchor(5)
'	Gui.FrmMaster.cmdPrint.Anchor(9)
	Gui.FrmMaster.lblstatus.Anchor(9)
	Gui.FrmMaster.pbstatus.Anchor(9)
	
	Gui.FrmMaster.GsGCAll.Anchor(15)
'	Gui.FrmMaster.GsGCMJ.Anchor(15)
'	Gui.FrmMaster.GsGCMS.Anchor(15)
'	Gui.FrmMaster.GsGCMJMS.Anchor(15)
'	Gui.FrmMaster.GsGCIndWOs.Anchor(15)	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SetAnchors.End

Program.Sub.FrmMaster_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	

	F.Intrinsic.Control.CallSub(Serialize)
	f.Intrinsic.Control.CallSub("Unload")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FrmMaster_UnLoad.End

Program.Sub.CheckTable.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bTable.Declare(Boolean)

	F.ODBC.Connection!con.TableExists("GCG_5987_WO_NOTES",V.Local.bTable)
	F.Intrinsic.Control.If(V.Local.bTable,=,False)
'		F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5941_WO_NOTES(JOB CHAR(6),SUFFIX CHAR(3),SEQUENCE CHAR(6),PRIORITY CHAR(2),RANK CHAR(2),PALLET CHAR(20),PULLED BIT DEFAULT '0',PERM_PALLET CHAR(20),NOTES LONGVARCHAR);")
		F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5987_WO_NOTES(JOB CHAR(6),SUFFIX CHAR(3),SEQUENCE CHAR(6),PRIORITY CHAR(2),RANK CHAR(2),PALLET CHAR(20),PULLED BIT DEFAULT '0',PERM_PALLET CHAR(20),NOTES LONGVARCHAR,Tooling BIT DEFAULT '0',QualityGauges BIT DEFAULT '0');")
		F.ODBC.Connection!Con.Execute("CREATE UNIQUE INDEX GCG_5987_WO_NOTES01 USING 0 ON GCG_5987_WO_NOTES (JOB, SUFFIX, SEQUENCE);")
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.TableExists("GCG_5987_MASTERSCHED",V.Local.bTable)
	F.Intrinsic.Control.If(V.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5987_MasterSched(TERMINAL VARCHAR(50), WORKCENTER VARCHAR(50),WO_DATE_DUE DATE, SEQ_DATE_DUE DATE, JOB VARCHAR(50), SUFFIX VARCHAR(50), SEQ VARCHAR(50), DISPLAY_PART VARCHAR(50), PART_DESCRIPTION VARCHAR(50), QTY_ORDER NUMERIC(8,2), PCS_REM1 NUMERIC(8,2), SEQ_PCS_REM NUMERIC(8,2), REM_STD_HRS NUMERIC(8,2), PRIORITY5941 VARCHAR(50), PALLET VARCHAR(50), PULLED BIT  DEFAULT '0', WO_NOTE LONGVARCHAR, RANK VARCHAR(50), LOCATION VARCHAR(50), CUR_OPER VARCHAR(50));")
		'F.ODBC.Connection!Con.Execute("CREATE UNIQUE INDEX GCG_5941_MASTERSCHED01 USING 0 ON GCG_5941_MasterSched (TERMINAL,JOB, SUFFIX,SEQ);")		
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.TableExists("GCG_5987_WCDISPATCH",V.Local.bTable)
	F.Intrinsic.Control.If(V.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5987_WCDISPATCH(WORKCENTER VARCHAR(50),SEQ_DATE_DUE DATE,WO_DATE_DUE DATE,JOB VARCHAR(50),SUFFIX VARCHAR(50),SEQ VARCHAR(50),DISPLAY_PART VARCHAR(50),PART_DESCRIPTION VARCHAR(50),DESCRIPTION VARCHAR(50),QTY_ORDER NUMERIC(8,2),SEQ_PCS_REM NUMERIC(8,2), PCS_REM1 NUMERIC(8,2),REM_STD_HRS NUMERIC(8,2),PALLET VARCHAR(50),PULLED BIT  DEFAULT '0',WO_NOTE LONGVARCHAR,PRIORITY5941 VARCHAR(50),RANK VARCHAR(50),TERMINAL VARCHAR(50),LOCATION VARCHAR(50));")
		'F.ODBC.Connection!Con.Execute("CREATE INDEX GCG_5941_WCDISPATCH01 USING 0 ON GCG_5941_WCDISPATCH (JOB, SUFFIX, SEQ,TERMINAL);")		
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.TableExists("GCG_5987_PICKLIST",V.Local.bTable)
	F.Intrinsic.Control.If(V.Local.bTable,=,False)
		F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5987_PICKLIST(WORKCENTER VARCHAR(50),SEQ_DATE_DUE DATE,WO_DATE_DUE DATE,JOB VARCHAR(50),SUFFIX VARCHAR(50),SEQ VARCHAR(50),DISPLAY_PART VARCHAR(50),PART_DESCRIPTION VARCHAR(50),DESCRIPTION VARCHAR(50),QTY_ORDER NUMERIC(8,2),SEQ_PCS_REM NUMERIC(8,2), PCS_REM1 NUMERIC(8,2),REM_STD_HRS NUMERIC(8,2),PALLET VARCHAR(50),PULLED BIT  DEFAULT '0',WO_NOTE LONGVARCHAR,PRIORITY5941 VARCHAR(50),RANK VARCHAR(50),TERMINAL VARCHAR(50),LOCATION VARCHAR(50));")
	F.Intrinsic.Control.EndIf
	
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.CheckPrint.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sRet.Declare
	V.Local.bRet.Declare
	V.Local.sSQL.Declare
	F.ODBC.Connection!conC.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)

	F.Intrinsic.String.Build("SELECT REG_ID FROM GS_REGISTRY WHERE REG_ID = 5987 AND COMPANY = '{0}';",V.Caller.CompanyCode,V.Local.sSQL)
	F.ODBC.Connection!conC.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.IsNullOrWhitespace)
		Gui.FrmMaster.chkBarcode.Value(1)
		Gui.FrmMaster.chkPicklist.Value(1)
		Gui.FrmMaster.chkPicklist2.Value(1)
	F.Intrinsic.Control.Else
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,1000,0,"",V.Local.bRet)
		Gui.FrmMaster.chkBarcode.Value(V.Local.bRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,2000,0,"",V.Local.bRet)
		Gui.FrmMaster.chkPicklist.Value(V.Local.bRet)
			F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,0,"",V.Local.bRet)
		Gui.FrmMaster.chkPicklist2.Value(V.Local.bRet)
	F.Intrinsic.Control.EndIf

	F.ODBC.Connection!conC.Close
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckPrint.End

Program.Sub.CheckLongPart.Start
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
Program.Sub.CheckLongPart.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare			
	
	F.Intrinsic.Control.CallSub(Serialize)
	f.Intrinsic.Control.CallSub("Load")	
	F.Intrinsic.Control.CallSub(Deserialize)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.Load.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	V.Local.bCutoff.Declare	
		
	'Gui.FrmMaster..Caption("Master Schedule - Release/Picklist")
	V.Local.bCutoff.Set(True)
	Gui.FrmMaster.GsGCAll.ClearRows("gvAll")
'	Gui.FrmMaster.cmdRefresh.BackColor(14474460)
	Gui.FrmMaster.GsGCAll.Visible(False)
'	Gui.FrmMaster.GsGCMJ.Visible(False)
'	Gui.FrmMaster.GsGCMS.Visible(False)
'	Gui.FrmMaster.GsGCMJMS.Visible(False)
'	Gui.FrmMaster.GsGCIndWOs.Visible(False)
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.CallSub(lockscreen)
	
	'Load Data	
	F.Intrinsic.Control.CallSub("loaddtdvall")	
	'F.Intrinsic.Control.CallSub("loaddtmj")
	'F.Intrinsic.Control.CallSub("loaddtms")
	'F.Intrinsic.Control.CallSub("loaddtindwos")
	'f.Intrinsic.Control.CallSub("Color_Ready_And_FullAllocated")
	F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.UnBlockEvents
	
	Gui.FrmMaster.GsGCAll.Visible(True)
'	Gui.FrmMaster.GsGCMJ.Visible(True)
'	Gui.FrmMaster.GsGCMS.Visible(True)
'	Gui.FrmMaster.GsGCMJMS.Visible(True)
'	Gui.FrmMaster.GsGCIndWOs.Visible(True)	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Load.End
Program.Sub.loadDTDVAll.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iProgress.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.fEstHrs.Declare
	V.Local.fRemHrs.Declare
	V.Local.fPcsRem.Declare
	V.Local.sCurOper.Declare
	V.Local.dCurOperDate.Declare
	V.Local.sNextOper.Declare
	V.Local.sOutside.Declare
	V.Local.dShipDate.Declare
	V.Local.dDateCheck.Declare(Date,01/01/1900)
	V.Local.bDictExists.Declare
	V.Local.sDept.Declare
	V.Local.bIssued.Declare
					 
	V.Local.dDateTime.Declare
	V.Local.sCaption.Declare
	v.Local.dDate1.Declare
	v.Local.dDate2.Declare
	v.Local.iDiff1.Declare
	v.Local.iDiff2.Declare
	v.Local.dCutOff.Declare
	v.Local.sFilter.Declare	
	v.Local.sHold.Declare
	v.Local.sMfgStd.Declare
	
	v.Local.dCutOff.Set(v.Screen.FrmMaster!dtpCutDt.Value)

	Gui.FrmMaster.lblStatus.Visible(True)
	Gui.FrmMaster.pbStatus.Visible(True)
	Gui.FrmMaster.lblStatus.ForeColor(V.Color.Black)
	Gui.FrmMaster.lblStatus.FontSize(8)
	Gui.FrmMaster.lblStatus.Caption("Loading Work Orders....")

	F.Intrinsic.Control.If(V.DataTable.dtAll.Exists)
		F.Data.DataTable.Close("dtAll")
	F.Intrinsic.Control.EndIf

	F.Data.Dictionary.Exists("dIndirect",V.Local.bDictExists)
	F.Intrinsic.Control.If(V.Local.bDictExists)
		F.Data.Dictionary.Close("dIndirect")
	F.Intrinsic.Control.EndIf
	
	F.Data.Dictionary.CreateFromSQL("dIndirect","con","SELECT DISTINCT CONCAT(JOB,SUFFIX) AS JS,CONVERT(IF('' = '',1,0),SQL_BIT) FROM IND_LBR_ACCTS;")
	F.Data.Dictionary.SetDefaultReturn("dIndirect",False)

	'f.Intrinsic.String.Build("SELECT CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED,CAST(CASE WHEN FLAG_WO_PRTD = 'X' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,Convert(0,SQL_Bit) as FullAllocated,PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,PRODUCT_LINE,DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,DATE_DUE,SCHEDULED_DUE_DATE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2',CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,'' AS READY,VJH.CUSTOMER_PO FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN GAB_4169_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION WHERE DATE_CLOSED = '1900-1-1' and Date_Start <= '{0}' ORDER BY DATE_START,PRIORITY,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
	'f.Intrinsic.String.Build("SELECT CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED,CAST(CASE WHEN FLAG_WO_PRTD = 'X' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)/VJO.UNITS END AS FLOAT) AS REM_STD_HRS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '99' ELSE GWN.RANK END) AS RANK,GWN.PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5941_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER WHERE DATE_CLOSED = '1900-1-1' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
	
	'LEFT JOIN GCG_5963_Audit Audit ON A.Order_NO = Audit.SO
	F.Global.General.ReadOption("050500","1","1","0000",V.Local.sMfgStd)

	F.Intrinsic.Control.If(v.Local.sMfgStd,=,"1")
		'---pcs per hr --- 
		'f.Intrinsic.String.Build("SELECT CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED,CAST(CASE WHEN FLAG_WO_PRTD = 'X' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)/VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5941_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
'		f.Intrinsic.String.Build("SELECT CASE When FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED,CASE WHEN VJH.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, CASE WHEN GWN.Tooling IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.Tooling,SQL_BIT)  END AS Tooling, CASE WHEN GWN.QualityGauges IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.QualityGauges,SQL_BIT)  END AS QualityGauges,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)/VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5987_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
		f.Intrinsic.String.Build("SELECT CASE When FLAG_WO_PRTD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED,CASE WHEN VJH.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, CASE WHEN GWN.Tooling IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.Tooling,SQL_BIT)  END AS Tooling, CASE WHEN GWN.QualityGauges IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.QualityGauges,SQL_BIT)  END AS QualityGauges,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)/VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP, VJO.HOURS_ESTIMATED as SEQ_EST_HRS, if(VJO.HOURS_ACTUAL > VJO.HOURS_ESTIMATED, 0, VJO.HOURS_ESTIMATED - VJO.HOURS_ACTUAL) as SEQ_REM_HRS FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5987_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)

	f.Intrinsic.Control.Else
		'---hrs per pc---
		'f.Intrinsic.String.Build("SELECT CAST(CASE WHEN FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS PRINTED,CAST(CASE WHEN FLAG_WO_PRTD = 'X' OR FLAG_WO_PRTD = 'R' THEN 1 ELSE 0 END AS BIT) AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)*VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5941_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
'		f.Intrinsic.String.Build("SELECT CASE When FLAG_WO_PRTD = 'Y' OR FLAG_WO_PRTD = 'R' THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED,CASE WHEN VJH.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, CASE WHEN GWN.Tooling IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.Tooling,SQL_BIT)  END AS Tooling, CASE WHEN GWN.QualityGauges IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.QualityGauges,SQL_BIT)  END AS QualityGauges,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)*VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5987_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
		f.Intrinsic.String.Build("SELECT CASE When FLAG_WO_PRTD = 'Y'  THEN CONVERT(1,SQL_BIT) WHEN FLAG_WO_PRTD !='Y' Or Flag_WO_PRTD != 'R' Then convert(0,SQL_BIT) END AS PRINTED,CASE WHEN VJH.FLAG_WO_RELEASED ='Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT (0, SQL_BIT) END AS RELEASED,CASE WHEN VJH.FLAG_HOLD = 'Y' THEN CONVERT(1,SQL_BIT) WHEN VJH.FLAG_HOLD = 'N' THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_HOLD, CASE WHEN GWN.Tooling IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.Tooling,SQL_BIT)  END AS Tooling, CASE WHEN GWN.QualityGauges IS NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(GWN.QualityGauges,SQL_BIT)  END AS QualityGauges,VJH.JOB,VJH.SUFFIX,VJH.JOB + VJH.SUFFIX as Jobsuffix,VJO.SEQ,VJO.WORKCENTER,Convert(0,SQL_Bit) as FullAllocated,VJH.PRIORITY,NAME_CUSTOMER,COALESCE(VJH.PART,'') AS PART,'' As DISPLAY_PART,VJH.LOCATION,VJH.DESCRIPTION AS PART_DESCRIPTION,PRODUCT_LINE,VJO.DESCRIPTION,COALESCE((select top 1 vjo.date_start from v_job_operations vjo where vjo.lmo = 'L' and VJO.JOB = VJH.JOB and VJO.SUFFIX = VJH.SUFFIX and VJO.SEQ < '990000'),'1900-01-01') AS DATE_START,VJH.DATE_DUE,SCHEDULED_DUE_DATE,VJO.DATE_DUE AS SEQ_DATE_DUE,CONVERT(0,SQL_FLOAT) AS EST_HRS,NUM_HOURS AS ACT_HRS,CONVERT(0,SQL_FLOAT) AS REM_HRS,'' AS DEPT,VJO.DATE_DUE AS CUR_OPER_DATE,'' AS CUR_OPER,'' AS NEXT_OPER,'' AS OUTSIDE,CONVERT(NULL,SQL_DATE) AS SHIP_TO_OP,QTY_ORDER,QTY_ORDER - QTY_COMPLETED AS PCS_REM1,VJO.UNITS_OPEN,VJO.HOURS_ACTUAL AS SEQ_ACT_HRS,VJO.UNITS_OPEN-VJO.UNITS_COMPLETE AS SEQ_PCS_REM,VJO.UNITS,CAST(CASE WHEN VJO.UNITS=0 THEN 0 ELSE (VJO.UNITS_OPEN-VJO.UNITS_COMPLETE)*VJO.UNITS END AS FLOAT) AS REM_STD_HRS,COALESCE((CASE WHEN DATEPART("WEEKDAY",CURDATE())=2 THEN (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND (charge_date >= curdate()-3 AND charge_date < curdate())) ELSE (SELECT SUM(VJD.PIECES_COMPLTD) from v_JOB_DETAIL VJD WHERE VJD.JOB=VJO.JOB AND VJD.SUFFIX=VJO.SUFFIX AND VJD.SEQ=VJO.SEQ AND charge_date = curdate()-1) END),0) AS PRIOR_GOOD_PCS,VJO.UNITS_COMPLETE,VJO.UNITS_SCRAP,(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN IF(VOL.DATE_ITEM_PROM='1900-01-01',NULL,VOL.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(VSS.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),VSS.DATE_DUE) END) AS ORDER_SHIP_DATE,GWN.NOTES AS 'WO_NOTE',VWUF.USER_6 AS 'WO_NOTE2','' as NewWC,CAST(0 As BIT) AS Sel,(CASE WHEN GWN.PRIORITY IS NULL OR GWN.PRIORITY = '' THEN '99' ELSE GWN.PRIORITY END) AS PRIORITY5941,(CASE WHEN GWN.RANK IS NULL OR GWN.RANK = '' THEN '' ELSE GWN.RANK END) AS RANK,RTRIM(GWN.PALLET) AS PALLET, CAST(CASE WHEN GWN.PULLED = 1 THEN 1 ELSE 0 END AS BIT) AS PULLED,LEFT(VRD.DESC_ROUTER_1,10) AS PERM_PALLET,CONCAT(VJH.JOB,VJH.SUFFIX) AS JS,CASE WHEN CODE_SOURCE IS NULL THEN 'F' ELSE CODE_SOURCE END AS CODE_SOURCE,'' AS PCS_REM,CONVERT(0,SQL_BIT) AS IND_FLAG,CONVERT(0,SQL_BIT) AS ISSUED,CONVERT(0,SQL_BIT) AS READY ,VJH.CUSTOMER_PO,CONVERT(0,SQL_BIT) AS CLOSE_THE_OP, VJO.HOURS_ESTIMATED as SEQ_EST_HRS, if(VJO.HOURS_ACTUAL > VJO.HOURS_ESTIMATED, 0, VJO.HOURS_ESTIMATED - VJO.HOURS_ACTUAL) as SEQ_REM_HRS FROM V_JOB_HEADER VJH LEFT JOIN V_CUSTOMER_MASTER VCM ON VJH.CUSTOMER=VCM.CUSTOMER LEFT JOIN V_WO_USER_FLDS VWUF ON VJH.JOB = VWUF.JOB AND VJH.SUFFIX = VWUF.SUFFIX LEFT JOIN V_JOB_OPERATIONS_WC VJO ON VJH.JOB=VJO.JOB AND VJH.SUFFIX=VJO.SUFFIX LEFT JOIN GCG_5987_WO_NOTES GWN ON VJH.JOB = GWN.JOB AND VJH.SUFFIX = GWN.SUFFIX AND VJO.SEQ = GWN.SEQUENCE LEFT JOIN V_INVENTORY_Mst2 VIM ON VJH.part = VIM.PART AND VJH.LOCATION = VIM.LOCATION LEFT JOIN V_ROUTER_DESC VRD ON VJH.part = VRD.ROUTER LEFT JOIN V_ORDER_TO_WO AS VOTOWO ON VJH.JOB=VOTOWO.JOB AND VJH.SUFFIX=VOTOWO.SUFFIX LEFT JOIN V_ORDER_LINES AS VOL ON VOTOWO.ORDER_NO=VOL.ORDER_NO AND VOTOWO.ORDER_LINE=VOL.RECORD_NO LEFT JOIN V_OE_SHIP_SCHED VSS ON VOL.ORDER_NO=VSS.ORDER_NO AND VOL.RECORD_NO=VSS.ORDER_LINE WHERE DATE_CLOSED = '1900-01-01' and VJO.Date_due <= '{0}' and LMO = 'L' AND VJO.DATE_COMPLETED = '1900-01-01' AND VJO.SEQ < '995000' ORDER BY VJO.WORKCENTER,GWN.PRIORITY,GWN.RANK,VJO.DATE_due,VJH.JOB,VJH.SUFFIX;",v.Local.dCutOff.PervasiveDate,v.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtAll","con",v.Local.sSQL,True)
	F.Data.DataTable.AddDisplayPartColumn("dtAll",0,"PART","DISPLAY_PART")

	Gui.FrmMaster.pbStatus.Min(0)
	f.Intrinsic.Control.if(v.DataTable.dtAll.RowCount,>,0)
		Gui.FrmMaster.pbStatus.Max(V.DataTable.dtAll.RowCount)		
	f.Intrinsic.Control.EndIf

	'Operations
'	gui.Form.lblProgress.Caption("Getting data for Operations...")
	f.Intrinsic.Control.If(v.DataTable.Ops.Exists)
		f.Data.DataTable.Close("Ops")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("Ops","con","SELECT A.JOB,A.SFX,A.SEQ,A.SEQTYPE,A.SEQRES,A.PCSREMAIN,CONVERT(CASE WHEN A.DueDate IS NULL THEN '1900-01-01' ELSE A.DueDate END,SQL_DATE) AS DueDate,IF(WORK_GROUP <> '',D.WC_DEPT,B.WC_DEPT) AS DEPT FROM APSV3_JBLINES A LEFT JOIN WORKCENTERS B ON A.SEQRES = B.MACHINE LEFT JOIN WORKGROUP_HEAD C ON A.SEQRES = C.WORK_GROUP LEFT JOIN WORKCENTERS D ON C.PROTOTYPE_WC = D.MACHINE WHERE A.COMPLDATE IS NULL AND A.SEQTYPE <> '2'",True)
	f.Data.DataView.Create("Ops","dvOps")	

	'SeqType3 for all
'	gui.Form.lblProgress.Caption("Getting data for SeqType3...")
	f.Intrinsic.Control.If(v.DataTable.SeqType3.Exists)
		f.Data.DataTable.Close("SeqType3")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SeqType3","con","SELECT JOB,SFX,SEQ,SEQRES,CONVERT(CASE WHEN DueDate IS NULL THEN '1900-01-01' ELSE DueDate END,SQL_DATE) AS DueDate FROM APSV3_JBLINES WHERE SEQTYPE = '3' AND COMPLDATE IS NULL",True)
	f.Data.DataView.Create("SeqType3","dvSeqType3")
	
	'SeqType2 for all
'	gui.Form.lblProgress.Caption("Getting data for SeqType2...")
	f.Intrinsic.Control.If(v.DataTable.SeqType2.Exists)
		f.Data.DataTable.Close("SeqType2")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SeqType2","con","Select JOB,SFX,SEQTYPE from APSV3_JBLINES where SEQTYPE ='2' and ComplDate is Null;",True)
	f.Data.DataView.Create("SeqType2","dvSeqType2")	
	
	'Sum HoursOrig + InitSU for all
'	gui.Form.lblProgress.Caption("Getting data for HoursOrig + InitSU...")
	f.Intrinsic.Control.If(v.DataTable.SumHnI.Exists)
		f.Data.DataTable.Close("SumHnI")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("SumHnI","con","SELECT JOB,SFX,CONVERT(SUM(HOURSORIG+INITSU),SQL_NUMERIC) AS EST_HRS FROM APSV3_JBLINES WHERE SEQTYPE = '1' GROUP BY JOB,SFX;",True)
	f.Data.DataView.Create("SumHnI","dvSumHnI")
	
	'Set Indicator
''	gui.Form.pbStatus.Min(0)
'	f.Intrinsic.Control.If(v.DataTable.dtAll.RowCount,>,0)
'		gui.Form.pbStatus.Max(v.DataTable.dtAll.RowCount)
'	f.Intrinsic.Control.EndIf
'	gui.Form.lblProgress.Caption("Looping to set Indirect and WIP FG...")

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAll.RowCount--,1)
		F.Intrinsic.Math.Add(V.Local.iProgress,1,V.Local.iProgress)
		Gui.FrmMaster.pbStatus.Value(V.Local.iProgress)
		
		V.Local.sJob.Set(V.DataTable.dtAll(V.Local.iCnt).JOB!FieldValTrim)
		V.Local.sSuffix.Set(V.DataTable.dtAll(V.Local.iCnt).SUFFIX!FieldValTrim)
		
		'Build Filter by Job,Suffix
		f.Intrinsic.String.Build("JOB = '{0}' AND SFX = '{1}'",V.Local.sJob,V.Local.sSuffix,v.Local.sFilter)
		f.Data.DataView.SetFilter("Ops","dvOps",v.Local.sFilter)
		f.Data.DataView.SetSort("Ops","dvOps","Job,Sfx,Seq")
		
		'Initialize variables
		V.Local.sDept.Set("")
		V.Local.sCurOper.Set("")
		V.Local.dCurOperDate.Set(01/01/1900)
		V.Local.sNextOper.Set("")
		V.Local.sOutside.Set("")
		V.Local.dShipDate.Set(01/01/1900)
		V.Local.bIssued.Set(True)
		V.Local.fPcsRem.Set(0)		
		
		f.Intrinsic.Control.If(v.DataView.Ops!dvOps.RowCount,=,0)
			V.Local.sCurOper.Set("WIPTOFG")
			V.Local.fPcsRem.Set(0)
			V.Local.sNextOper.Set("")	
		f.Intrinsic.Control.ElseIf(v.DataView.Ops!dvOps.RowCount,=,1)

			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)			
					V.Local.sDept.Set(v.DataView.Ops!dvOps(0).DEPT!FieldValTrim)
					V.Local.sCurOper.Set(v.DataView.Ops!dvOps(0).SEQRES!FieldValTrim)
					F.Intrinsic.Control.If(v.DataView.Ops!dvOps(0).DueDate!FieldVal,=,"")
						V.Local.dCurOperDate.Set(01/01/1900)
					F.Intrinsic.Control.Else
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).DueDate!FieldVal)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					V.Local.sCurOper.Set("OUTSIDE")
					V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).DueDate!FieldVal)
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
			F.Intrinsic.Control.EndSelect
			
		f.Intrinsic.Control.ElseIf(v.DataView.Ops!dvOps.RowCount,>=,2)
			'First record
			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)			
					V.Local.sDept.Set(v.DataView.Ops!dvOps(0).DEPT!FieldValTrim)
					V.Local.sCurOper.Set(v.DataView.Ops!dvOps(0).SEQRES!FieldValTrim)
					F.Intrinsic.Control.If(v.DataView.Ops!dvOps(0).DueDate!FieldVal,=,"")
						V.Local.dCurOperDate.Set(01/01/1900)
					F.Intrinsic.Control.Else
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).DueDate!FieldVal)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					V.Local.sCurOper.Set("OUTSIDE")
					V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(0).DueDate!FieldVal)
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(0).PCSREMAIN!FieldValString)
			F.Intrinsic.Control.EndSelect		
			
			'Second Record
			F.Intrinsic.Control.SelectCase(v.DataView.Ops!dvOps(0).SEQTYPE!FieldValTrim)
				F.Intrinsic.Control.Case(1)
					F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
						V.Local.sDept.Set(v.DataView.Ops!dvOps(1).DEPT!FieldValTrim)
						V.Local.sCurOper.Set(v.DataView.Ops!dvOps(1).SEQRES!FieldValTrim)
						F.Intrinsic.Control.If(v.DataView.Ops!dvOps(1).DueDate!FieldVal,=,"")
							V.Local.dCurOperDate.Set(01/01/1900)
						F.Intrinsic.Control.Else
							V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(1).DueDate!FieldVal)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Else
						V.Local.sNextOper.Set(v.DataView.Ops!dvOps(1).SEQRES!FieldValTrim)
					F.Intrinsic.Control.EndIf
					V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(1).PCSREMAIN!FieldValString)
				F.Intrinsic.Control.Case(3)
					F.Intrinsic.Control.If(V.Local.sCurOper,=,"")
						V.Local.sCurOper.Set("OUTSIDE")
						V.Local.dCurOperDate.Set(v.DataView.Ops!dvOps(1).DueDate!FieldVal)
						V.Local.fPcsRem.Set(v.DataView.Ops!dvOps(1).PCSREMAIN!FieldValString)
					F.Intrinsic.Control.Else
						F.Intrinsic.Control.If(V.Local.sOutside,=,"")
							V.Local.sNextOper.Set("OUTSIDE")
						F.Intrinsic.Control.Else
							V.Local.sNextOper.Set("OUTSIDE")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndSelect	
		
		f.Intrinsic.Control.EndIf
		
		'SeqType3
		f.Data.DataView.SetFilter("SeqType3","dvSeqType3",v.Local.sFilter)
		f.Data.DataView.SetSort("SeqType3","dvSeqType3","SEQ")		
		f.Intrinsic.Control.If(v.DataView.SeqType3!dvSeqType3.RowCount,>,0)
			V.Local.dShipDate.Set(v.DataView.SeqType3!dvSeqType3(0).DueDate!FieldValString)
			v.Local.sOutside.Set(v.DataView.SeqType3!dvSeqType3(0).SEQRES!FieldValString)
		f.Intrinsic.Control.Else
			V.Local.dShipDate.Set()
			v.Local.sOutside.Set("")
		f.Intrinsic.Control.EndIf	

		'Sum HoursOrig + InitSU		
		f.Data.DataView.SetFilter("SumHnI","dvSumHnI",V.Local.sFilter)
		F.Intrinsic.Control.If(V.DataView.SumHnI!dvSumHnI.RowCount,>,0)
			V.Local.fEstHrs.Set(v.DataView.SumHnI!dvSumHnI(0).Est_Hrs!FieldValString)
			f.Intrinsic.Control.If(v.Local.fEstHrs,=,0)
				V.Local.fEstHrs.Set(0.00)
				V.Local.fRemHrs.Set(0.00)			
			f.Intrinsic.Control.Else
				F.Intrinsic.Math.Sub(V.Local.fEstHrs,V.DataTable.dtAll(V.Local.iCnt).ACT_HRS!FieldValFloat,V.Local.fRemHrs)
			f.Intrinsic.Control.EndIf			
		f.Intrinsic.Control.Else
			V.Local.fEstHrs.Set(0.00)
			V.Local.fRemHrs.Set(0.00)	
		F.Intrinsic.Control.EndIf	
	
		'SeqType2 for bIssue
		f.Intrinsic.String.Build("JOB = '{0}' AND SFX = '{1}'",V.Local.sJob,V.Local.sSuffix,v.Local.sFilter)
		f.Data.DataView.SetFilter("SeqType2","dvSeqType2",v.Local.sFilter)
		f.Intrinsic.Control.If(v.DataView.SeqType2!dvSeqType2.RowCount,>,0)
			v.Local.bIssued.Set(False)
		f.Intrinsic.Control.EndIf

		'If dCurOperDate = 01/01/1900 and dShipDate = 01/01/1900
		F.Intrinsic.Control.If(V.Local.dCurOperDate,=,V.Local.dDateCheck)
		F.Intrinsic.Control.AndIf(V.Local.dShipDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued)		
		F.Intrinsic.Control.ElseIf(V.Local.dCurOperDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"SHIP_TO_OP",V.Local.dShipDate)
		F.Intrinsic.Control.ElseIf(V.Local.dShipDate,=,V.Local.dDateCheck)
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"CUR_OPER_DATE",V.Local.dCurOperDate)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtAll",V.Local.iCnt,"EST_HRS",V.Local.fEstHrs,"REM_HRS",V.Local.fRemHrs,"DEPT",V.Local.sDept,"CUR_OPER",V.Local.sCurOper,"NEXT_OPER",V.Local.sNextOper,"OUTSIDE",V.Local.sOutside,"PCS_REM",V.Local.fPcsRem,"ISSUED",v.Local.bIssued,"CUR_OPER_DATE",V.Local.dCurOperDate,"SHIP_TO_OP",V.Local.dShipDate)
		F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Data.DataTable.FillFromDictionary("dtAll","dIndirect","JS","IND_FLAG")
	
	'Load first material seq
	F.Data.DataTable.AddColumn("dtAll","FirstMat","string")
	F.Data.Dictionary.CreateFromSQL("dFirstMat","con","select JOB + SUFFIX, rtrim(PART) from JOB_OPERATIONS where LMO = 'M' and SEQ < '990000' order by JOB, SUFFIX, SEQ")
	F.Data.Dictionary.SetDefaultReturn("dFirstMat","")
	F.Data.DataTable.FillFromDictionary("dtAll","dFirstMat","JobSuffix","FirstMat")
	F.Data.Dictionary.Close("dFirstMat")
	
	'Add Late Column
	f.Intrinsic.String.build("IIF([SCHEDULED_DUE_DATE] > [DATE_DUE],1,IIF([CUR_OPER_DATE] < #{0}#,1,0))",v.Ambient.Date.FormatMM/DD/YYYY,v.Local.sHold)
	f.Data.DataTable.AddExpressionColumn("dtAll","Late","boolean",v.Local.sHold)
	f.Intrinsic.String.build("IIF([DATE_DUE] < #{0}#,1,0)",v.Ambient.Date.FormatMM/DD/YYYY,v.Local.sHold)
	f.Data.DataTable.AddExpressionColumn("dtAll","Phs_Late","boolean",v.Local.sHold)
	'Create column for check Ready that copy from MJMS to MJ and MS
	f.Data.DataTable.AddExpressionColumn("dtAll","JobSuffixCodeSource","string","[Job] + '-' + [Suffix] + '-' + [CODE_SOURCE]")	
	'f.Intrinsic.Control.CallSub("CheckFullyAllocated")
	f.Intrinsic.Control.CallSub("CheckReqs")
	
	'F.Data.DataView.Create("dtAll","dvAll",22,"IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.Create("dtAll","dvAll",22,"IND_FLAG <> True","PRIORITY5941,RANK,DATE_DUE,JOB,SUFFIX")	
	f.Data.DataTable.SetValueFormat("dtAll",-1,"DATE_START","DATE_START","MM/DD/YYYY")
'working
	F.Intrinsic.Control.CallSub(loadgvall)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.loadDTDVAll.End

Program.Sub.CheckFullyAllocated.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	'Get all required to be issued
	f.Intrinsic.Control.If(v.DataTable.dtAlloc.Exists)
		f.Data.DataTable.Close("dtAlloc")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.CreateFromSQL("dtAlloc","con","SELECT A.JOB,A.SFX,A.JOB + A.SFX as JobSuffix,A.SEQ,A.SEQRES,a.PCSTOPROD ,B.LOCATION ,D.CODE_SOURCE ,A.Seqres + '-' + B.Location + '-' + A.JOB + A.SFX + Right('000000' + Cast(Seq as Varchar),6) as PartLocJobSuffixSeq ,Convert(0,SQL_Float) as Allocated FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX LEFT JOIN INVENTORY_MST2 D ON A.SEQRES = D.PART AND B.LOCATION = D.LOCATION WHERE A.SEQTYPE = 2 And CODE_SOURCE in ('P','M','F') and ComplDate is Null and PCSTOPROD <> 0",True)

	
	'Get Current allocated from item master and populate in parallel with all required dt
	f.Data.Dictionary.CreateFromSQL("AllocDict","con","select Part + '-' + Location + '-' + Heat as PartLocJobSuffixSeq, Quantity from item_master where heat <> '' and Alloc_Type = 'W'")
	f.Data.Dictionary.SetDefaultReturn("AllocDict",0)
	f.Data.DataTable.FillFromDictionary("dtAlloc","AllocDict","PartLocJobSuffixSeq","Allocated")
	f.Data.Dictionary.Close("AllocDict")
	
	'Get full allocated sequences
	f.Data.DataTable.AddExpressionColumn("dtAlloc","FullAllocated","boolean","IIF([PCSTOPROD] <= [Allocated],1,0)")
	f.Intrinsic.Control.If(v.DataTable.dtFullAllocated.Exists)
		f.Data.DataTable.Close("dtFullAllocated")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.Create("dtAlloc","dvAlloc",22,"FullAllocated = 1","")	
	f.Data.DataView.ToDataTableDistinct("dtAlloc","dvAlloc","dtFullAllocated","JobSuffix*!*FullAllocated",True)
	F.Data.DataTable.AddColumn("dtFullAllocated","Validated","boolean",True)
	
	'Get not allocated/not fully allocated sequences
	f.Data.DataView.SetFilter("dtAlloc","dvAlloc","FullAllocated = 0")	
	f.Intrinsic.Control.If(v.DataTable.dtNOTFullAllocated.Exists)
		f.Data.DataTable.Close("dtNOTFullAllocated")
	f.Intrinsic.Control.EndIf		
	f.Data.DataView.ToDataTableDistinct("dtAlloc","dvAlloc","dtNOTFullAllocated","JobSuffix*!*FullAllocated",True)	
	f.Data.Dictionary.CreateFromDatatable("NOTFullorPartiallyAllocDict","dtNOTFullAllocated","JobSuffix","FullAllocated")
	f.Data.Dictionary.SetDefaultReturn("NOTFullorPartiallyAllocDict",True)
	'Go back and flag the fullAllocated that contains some that are not fullallocated
	f.Data.DataTable.FillFromDictionary("dtFullAllocated","NOTFullorPartiallyAllocDict","JobSuffix","Validated")
	f.Data.Dictionary.Close("NOTFullorPartiallyAllocDict")
	'Turn that Final FullAllocated into dictionary and flag dtAll
	f.Intrinsic.Control.If(v.DataTable.dtFullAllocatedFinal.Exists)
		f.Data.DataTable.Close("dtFullAllocatedFINAL")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create("dtFullAllocated","dvFullAllocated",22,"Validated = 1","")	
	f.Data.DataView.ToDataTableDistinct("dtFullAllocated","dvFullAllocated","dtFullAllocatedFINAL","JobSuffix*!*Validated",True)
	f.Data.Dictionary.CreateFromDataTable("FullAllocatedDict","dtFullAllocatedFINAL","JobSuffix","Validated")
	f.Data.Dictionary.SetDefaultReturn("FullAllocatedDict",False)
	f.Data.DataTable.FillFromDictionary("dtAll","FullAllocatedDict","JobSuffix","Fullallocated")
	f.Data.Dictionary.Close("FullAllocatedDict")	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckFullyAllocated.End

Program.Sub.CheckReqs.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sJob2.Declare
	V.Local.sSuffix2.Declare
	V.Local.sSourceCode.Declare
	V.Local.sSQL.Declare
	V.Local.fMrpQty.Declare
	V.Local.fQty.Declare
	V.Local.fNewQty.Declare
	V.Local.iRows.Declare
	V.Local.iCnt2.Declare
	V.Local.iProgress.Declare
	v.Local.iInner.Declare
	v.Local.sFilter.Declare
	v.Local.iRowIndex.Declare
	v.Local.sHold.Declare
	v.Local.fHold.Declare
	v.Local.fPcsToProd.Declare

	Gui.FrmMaster.lblStatus.Caption("Checking for Material Availability....")

	'Get dataview of not Issued
	F.Data.DataView.Create("dtAll","dvMJMS",22,"Issued <> True AND IND_FLAG <> True and FullAllocated = 0","DATE_START,PRIORITY,JOB,SUFFIX")
	'Create Part Loc , Original Onhand Qty
	f.Intrinsic.Control.If(v.DataTable.PartLocMRP.Exists)
		f.Data.DataTable.Close("PartLocMRP")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("PartLocMrp","con","Select  i1.Part + '-' + i1.Location as PartLoc, i1.Qty_Onhand,i1.Qty_Onhand - Isnull(i3.Quantity,0) as Mrp_QtyOrig,i1.Qty_Onhand - Isnull(i3.Quantity,0) as Mrp_Qty from Inventory_mstr i1 left join (Select  i2.Part,i2.Location,Sum(Quantity) as Quantity from Item_Master i2 where i2.Alloc_Type = 'W' Group by i2.Part,i2.Location) i3 on i1.Part = i3.Part and i1.Location = i3.Location",True)
	f.Data.DataView.Create("PartLocMrp","dvPartLocMrp")	

	Gui.FrmMaster.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtAll!dvMJMS.RowCount,=,0)
		Gui.FrmMaster.pbStatus.Max(100)
	F.Intrinsic.Control.Else
		Gui.FrmMaster.pbStatus.Max(V.DataView.dtAll!dvMJMS.RowCount)
	F.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.DataTable.MRP.Exists)
		f.Data.DataTable.Close("MRP")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("MRP","con","SELECT A.Seqres + '-' + B.Location + '-' + A.JOB + A.SFX + Right('000000' + Cast(Seq as Varchar),6) as PartLocJobSuffixSeq,A.JOB,A.SFX,A.SEQ,SEQRES,B.LOCATION,SEQRES + '-' + B.LOCATION as PartLoc,IsNull(D.CODE_SOURCE,'') as CODE_SOURCE,PCSTOPROD,Convert(0,SQL_Float) as Allocated,CONVERT(CASE WHEN A.ComplDate IS NULL THEN '1900-01-01' ELSE A.ComplDate END,SQL_DATE) AS ComplDate FROM APSV3_JBLINES A LEFT JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.SFX = B.SUFFIX LEFT JOIN V_INVENTORY_MSTR C ON A.SEQRES = C.PART AND B.LOCATION = C.LOCATION LEFT JOIN INVENTORY_MST2 D ON A.SEQRES = D.PART AND B.LOCATION = D.LOCATION WHERE A.SEQTYPE = 2 ORDER BY A.JOB,A.SFX,A.SEQ;",True)
	
	'Allocated by job,suffix Seq Dict
	f.Data.Dictionary.CreateFromSQL("AllocBySeqDict","con","select Part + '-' + Location + '-' + Heat, Quantity from Item_Master where Alloc_Type = 'W'")
	f.Data.Dictionary.SetDefaultReturn("AllocBySeqDict",0)
	f.Data.DataTable.FillFromDictionary("MRP","AllocBySeqDict","PartLocJobSuffixSeq","Allocated")
	'PcsToProdAfterAlloc
	f.Data.DataTable.AddExpressionColumn("MRP","PcsToProdAfterAlloc","float","Isnull([PCSTOPROD],0) - [Allocated]")
	
	f.Data.DataView.Create("MRP","dvMRP")
v.local.SjobSufix.Declare
v.local.ScurrjobSufix.Declare

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtAll!dvMJMS.RowCount--,1)
		f.Intrinsic.String.Build("{0}{1}",V.DataView.dtAll!dvMJMS(V.Local.iCnt).JOB!FieldValString,V.DataView.dtAll!dvMJMS(V.Local.iCnt).SUFFIX!FieldValString,v.local.ScurrjobSufix)
		'check for duplicate JOB suffix
		f.Intrinsic.Control.If(v.local.SjobSufix,<>,v.local.ScurrjobSufix)
			f.Intrinsic.String.Build("{0}{1}",V.DataView.dtAll!dvMJMS(V.Local.iCnt).JOB!FieldValString,V.DataView.dtAll!dvMJMS(V.Local.iCnt).SUFFIX!FieldValString,v.local.SjobSufix)

			Gui.FrmMaster.pbStatus.Value(V.Local.iCnt)
			V.Local.sJob.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).JOB!FieldValString)
			V.Local.sSuffix.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).SUFFIX!FieldValString)
			V.Local.sSourceCode.Set(V.DataView.dtAll!dvMJMS(V.Local.iCnt).CODE_SOURCE!FieldValTrim)
			
			f.Intrinsic.Control.CallSub("Process_MRP","sJob",v.Local.sJob,"sSuffix",v.Local.sSuffix)
'			F.Data.DataView.SetValue("dtAll","dvMJMS",V.Local.iCnt,"READY",v.Args.bReady)
			f.Intrinsic.Control.If(v.Args.bReady)
				'Highlight Rows
				f.Intrinsic.String.Build("JobSuffix='{0}'",v.local.ScurrjobSufix,v.Local.sFilter)
				f.Data.DataView.Create("dtAll","dvUPD",22,v.Local.sFilter,"")
				F.Data.DataView.SetValue("dtAll","dvUPD",-1,"READY",v.Args.bReady)
				f.Data.DataView.Close("dtAll","dvUPD")
			f.Intrinsic.Control.endif
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)	
	
	f.Data.Dictionary.Close("AllocBySeqDict")	
	gui.FrmMaster.lblStatus.Caption("")
	gui.FrmMaster.pbStatus.Visible(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckReqs.End

Program.Sub.Process_MRP.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.bReady.Declare
	v.Local.sFilter.Declare
	v.Local.fPcsToProd.Declare
	v.Local.iRowIndex.Declare
	v.Local.fHold.Declare
	v.Local.iCnt.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.sRet.Declare	
	v.Local.fPcsToProdAfterAlloc.Declare
	
	'v.Local.sReady.Set("Y")
	v.Local.bReady.Set("1")
	
	'1/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate = #01/01/1900# and PCSTOPROD <> 0",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)	
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataView.MRP!dvMRP.RowCount--,1)
			v.Local.fPcsToProdAfterAlloc.Set(v.DataView.MRP!dvMRP(v.Local.iCnt).PcsToProdAfterAlloc!FieldValString)
			
			f.Intrinsic.Control.If(v.Local.fPcsToProdAfterAlloc,>,0)

				f.Intrinsic.String.Replace(v.DataView.MRP!dvMRP(v.Local.iCnt).SEQRES!FieldValString,"'","''",v.Local.sPart)
				v.Local.sLoc.Set(v.DataView.MRP!dvMRP(v.Local.iCnt).Location!FieldValString)
				f.Intrinsic.String.Build("PartLoc = '{0}-{1}'",v.Local.sPart,v.Local.sLoc,v.Local.sFilter)
				f.Data.DataTable.Select("PartLocMRP",v.Local.sFilter,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet,<>,"***NORETURN***")
					V.Local.iRowIndex.Set(V.Local.sRet)				
					f.Intrinsic.Math.Sub(v.DataTable.PartLocMRP(v.Local.iRowIndex).Mrp_Qty!FieldValString,v.Local.fPcsToProdAfterAlloc,v.Local.fHold)
					f.Data.DataTable.SetValue("PartLocMRP",v.Local.iRowIndex,"Mrp_Qty",v.Local.fHold)
					f.Intrinsic.Control.If(v.Local.fHold,<,0)
						'v.Local.sReady.Set("")
						v.Local.bReady.Set("0")
					f.Intrinsic.Control.EndIf				
				f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.Next(v.Local.iCnt)
		F.Intrinsic.Control.If(V.Local.bReady,=,"0")
			f.Intrinsic.Variable.AddRV("bReady",v.Local.bReady)
			f.Intrinsic.Control.ExitSub			
		F.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.EndIf	
		
	'2/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate = #01/01/1900# and PCSTOPROD = 0",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.bReady.Set("0")
		f.Intrinsic.Variable.AddRV("bReady",v.Local.bReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf				
	
	'3/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE in ('P','M','F') and ComplDate <> #01/01/1900#",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.bReady.Set("0")
		f.Intrinsic.Variable.AddRV("bReady",v.Local.bReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf		
	
	'4/
	f.Intrinsic.String.Build("Job = '{0}' and Sfx = '{1}' and CODE_SOURCE not in ('P','M','F')",v.Args.sJob,v.Args.sSuffix,v.Local.sFilter)
	f.Data.DataView.SetFilter("MRP","dvMRP",v.Local.sFilter)
	f.Intrinsic.Control.If(v.DataView.MRP!dvMRP.RowCount,>,0)
		v.Local.bReady.Set("0")
		f.Intrinsic.Variable.AddRV("bReady",v.Local.bReady)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf	
	
	f.Intrinsic.Variable.AddRV("bReady",v.Local.bReady)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Process_MRP.End
Program.Sub.LoadGVAll.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare
	V.Local.iPID.Declare
	V.Local.sFiles.Declare
	V.Local.sDeleteFile.Declare

	Gui.FrmMaster.GsGCAll.AddGridViewFromDataView("gvAll","dtAll","dvAll")
	Gui.FrmMaster.GsGCAll.SuspendLayout()
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","MultiSelect",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","AllowSort",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","AllowFilter",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsViewShowAutoFilterRow",True)
	Gui.FrmMaster.GsGCAll.SetGridViewProperty("gvAll","OptionsViewColumnAutoWidth",False)
	Gui.FrmMaster.GsGCAll.SetGridviewProperty("gvAll","EXPANDALLGROUPS",True)
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","GroupIndex",0)
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JS","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LATE","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","flag_hold","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","phs_late","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","fullallocated","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","next_oper","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","outside","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FirstMat","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","Visible",false)

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","date_start","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","scheduled_due_date","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","cur_oper_date","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","Visible",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","Visible",False)
	'Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Visible",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEL","Visible",False)
			
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","Caption","Job")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","Caption","Seq")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","Caption","Seq Due Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART_DESCRIPTION","Caption","Part Descr")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","Caption","Op Descr")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","Caption","Seq Order Qty")
	GUI.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","Caption","Seq Act Hrs")
	GUI.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CLOSE_THE_OP","Caption","Close The Op")
	GUI.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FirstMat","Caption","First Material")
	GUI.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","Caption","Seq Est Hrs")
	GUI.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","Caption","Seq Rem Hrs")
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","Caption","To Go")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","Caption","Runtime")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","Caption","Rem Std Hrs")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","Caption","WC")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","Caption","Run")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","Caption","Scrap")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","Caption","Prev Day Good")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","Caption","Select")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","Caption","New WC")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","Caption","Priority_")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","Caption","Rank")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","Caption","Pallet")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","Caption","Pulled")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","Caption","Perm Pallet")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","Caption","Late")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","Caption","Issued")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","Caption","Ship Date")


	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","AllowEdit",False)
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART_DESCRIPTION","AllowEdit",False)	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CLOSE_THE_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","AllowEdit",False)
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","AllowEdit",false)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","AllowEdit",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","AllowEdit",False)
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","AllowEdit",True)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Tooling","AllowEdit",True)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QualityGauges","AllowEdit",True)
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","ReadOnly",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Tooling","ReadOnly",False)
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QualityGauges","ReadOnly",False)
	
	F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.ColumnEdit("gvAll","NewWC","Dropdownlist",V.Global.sWCList)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","AllowEdit",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","ReadOnly",False)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","ReadOnly",true)
	F.Intrinsic.Control.Else
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","AllowEdit",false)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","ReadOnly",True)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","ReadOnly",True)	
	F.Intrinsic.Control.EndIf	


	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","Width","50")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","Width","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Width","50")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","Width","180")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","Width","140")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","Width","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","Width","30")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART_DESCRIPTION","Width","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","Width","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","Width","75")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","Width","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","Width","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","Width","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","Width","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","Width","70")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","Width","95")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","Width","70")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","Width","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","Width","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","Width","200")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","Width","35")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","Width","100")	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUSTOMER_PO","Width","115")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","Width","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","Width","60")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","Width","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","Width","26")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","Width","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CLOSE_THE_OP","Width","85")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FirstMat","Width","140")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","Width","100")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","Width","100")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART_DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CLOSE_THE_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FirstMat","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PART_DESCRIPTION","CellHAlignment","Left")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WORKCENTER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","CellHAlignment","Right")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Sel","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CLOSE_THE_OP","CellHAlignment","Center")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","WO_NOTE2","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEWWC","CellBackColor","LightBlue")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY5941","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RANK","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PALLET","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PULLED","CellBackColor","LightYellow")
	'Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PERM_PALLET","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\PPT_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","VisibleIndex","0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","VisibleIndex","1")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","READY","VisibleIndex","2")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ISSUED","VisibleIndex","3")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FullAllocated","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Phs_Late","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Issued","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Ready","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","Late","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRINTED","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","RELEASED","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","FLAG_HOLD","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","JOB","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SUFFIX","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ","Fixed","Left")
'	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_PCS_REM","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","QTY_ORDER","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS","DisplayCustomNumeric","#,###,###,##0.0000")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","REM_STD_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_COMPLETE","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_SCRAP","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","PRIOR_GOOD_PCS","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","UNITS_OPEN","DisplayCustomNumeric","#,###,###,##0")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SHIP_TO_OP","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","SEQ_DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","ORDER_SHIP_DATE","DisplayCustomDatetime","d")
	
	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Late","tagLategvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Late","tagLategvAll","backcolor","Pink")	
	
	'Set column color based on Issued/Not Issued
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Issued","tagIssuedgvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Issued","tagIssuedgvAll","backcolor","Purple")	
	
	'Set column color based on ready to issue/material available
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Ready","tagReadygvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Ready","tagReadygvAll","backcolor","Green")
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Phs_Late","tagPhs_LategvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Phs_Late","tagPhs_LategvAll","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCAll.SetColumnProperty("gvAll","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
'	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","EST_HRS","SUM_EST_HRS","Sum","","","n")
'	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
'	Gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","REM_HRS","SUM_REM_HRS","Sum","","","n")
	gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","UNITS_OPEN","SUM_QTY_ORDER","Sum","","","n")
	gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","REM_STD_HRS","SUM_REM_STD_HRS","Sum","","","n")
	gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","SEQ_ACT_HRS","SUM_SEQ_ACT_HRS","Sum","","","n")
	gui.FrmMaster.GsGCAll.AddSummaryItem("gvAll","SEQ_EST_HRS","SUM_SEQ_EST_HRS","Sum","","","n")
	
	Gui.FrmMaster.GsGCAll.ResumeLayout()
	Gui.FrmMaster.GsGCAll.MainView("gvAll")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVAll.End

Program.Sub.LoadDTMJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.DataTable.dtMJ.Exists,=,True)
		F.Data.DataTable.Close("dtMJ")
	f.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtAll","dvMJ",22,"Issued <> True AND CODE_SOURCE = 'F' AND IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvMJ","dtMJ",True)

	F.Intrinsic.Control.CallSub(LoadgvMJ)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTMJ.End

Program.Sub.LoadGVMJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCMJ.AddGridViewFromDataTable("gvMJ","dtMJ")
	Gui.FrmMaster.GsGCMJ.SuspendLayout()
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","MultiSelect",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","AllowSort",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","AllowFilter",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCMJ.SetGridViewProperty("gvMJ","OptionsViewShowAutoFilterRow",True)	

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JS","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CODE_SOURCE","Visible",False)	
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PART","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FirstMat","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SEQ_EST_HRS","Visible",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SEQ_REM_HRS","Visible",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","Caption","Job")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","Caption","Late")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","Caption","Issued")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FirstMat","Caption","First Material")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FirstMat","MinWidth","140")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FirstMat","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Phs_Late","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","Late","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Late","tagLategvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Late","tagLategvMJ","backcolor","Pink")	
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Phs_Late","tagPhs_LategvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Phs_Late","tagPhs_LategvMJ","backcolor","Yellow")		
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCMJ.SetColumnProperty("gvMJ","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMJ.AddSummaryItem("gvMJ","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCMJ.ResumeLayout()
	Gui.FrmMaster.GsGCMJ.MainView("gvMJ")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVMJ.End

Program.Sub.LoadDTMS.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	

	F.Intrinsic.Control.If(V.DataTable.dtMS.Exists,=,true)
		F.Data.DataTable.Close("dtMS")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.Create("dtAll","dvMS",22,"Issued <> True AND CODE_SOURCE = 'M' AND IND_FLAG <> True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvMS","dtMS",True)

	F.Intrinsic.Control.CallSub(LoadGVMS)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTMS.End

Program.Sub.LoadGVMS.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCMS.addGridviewfromDataTable("gvMS","dtMS")
	Gui.FrmMaster.GsGCMS.SuspendLayout()
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","MultiSelect",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","AllowSort",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","AllowFilter",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCMS.SetGridViewProperty("gvMS","OptionsViewShowAutoFilterRow",True)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JS","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PART","Visible",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FirstMat","Visible",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","Caption","Job")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","Caption","Late")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","Caption","Issued")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FirstMat","Caption","First Material")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","MinWidth","26")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FirstMat","MinWidth","140")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FirstMat","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Phs_Late","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","Late","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_START","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Late","tagLategvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Late","tagLategvMS","backcolor","Pink")
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Phs_Late","tagPhs_LategvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Phs_Late","tagPhs_LategvMS","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCMS.SetColumnProperty("gvMS","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCMS.AddSummaryItem("gvMS","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCMS.ResumeLayout()
	Gui.FrmMaster.GsGCMS.MainView("gvMS")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVMS.End

Program.Sub.LoadDTIndWos.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.DataTable.dtInd.Exists,=,true)
		F.Data.DataTable.Close("dtInd")
	F.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtAll","dvInd",22,"IND_FLAG = True","DATE_START,PRIORITY,JOB,SUFFIX")
	F.Data.DataView.ToDataTable("dtAll","dvInd","dtInd",True)

	F.Intrinsic.Control.CallSub(loadgvindwos)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDTIndWos.End

Program.Sub.LoadGVIndWOs.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sGabFile.Declare

	Gui.FrmMaster.GsGCIndWOs.AddGridViewFromDataTable("gvInd","dtInd")
	Gui.FrmMaster.GsGCIndWOs.SuspendLayout()
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","MultiSelect",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","AllowSort",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","AllowFilter",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsDetailShowDetailTabs",False)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsViewShowGroupPanel",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsMenuShowAutoFilterRowItem",False)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsFindAlwaysVisible",True)
	Gui.FrmMaster.GsGCIndWOs.SetGridViewProperty("gvInd","OptionsViewShowAutoFilterRow",True)		

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JS","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","IND_FLAG","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CODE_SOURCE","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JobSuffixCodeSource","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JobSuffix","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PART","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FirstMat","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FirstMat","ShowInColumnChooser",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SEQ_EST_HRS","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SEQ_EST_HRS","ShowInColumnChooser",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SEQ_REM_HRS","Visible",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SEQ_REM_HRS","ShowInColumnChooser",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","Caption","Printed")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","Caption","Released")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","Caption","On Hold")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","Caption","Job")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","Caption","Suf")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","Caption","Priority")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","Caption","Part")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","Caption","Loc")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","Caption","PL")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","Caption","Description")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","Caption","1st Lbr St Dt")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","Caption","WO Due Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","Caption","Sched Due Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","Caption","Est. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","Caption","Act. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","Caption","Rem. Hrs.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","Caption","Dept.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","Caption","Cur. Op. Date")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","Caption","Current Op.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","Caption","Next Op.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","Caption","Outside Process")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","Caption","Ship To Op")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","Caption","Order Qty")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","Caption","Pcs Rem")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","Caption","Notes")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","Caption","User Field 6 (70 Characters)")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","Caption","Customer PO")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","Caption","Late")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","Caption","Ready")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","Caption","Phs. Late")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","Caption","Full Alloc.")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","Caption","Issued")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","AllowEdit",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","AllowEdit",True)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","AllowEdit",True)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","AllowEdit",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","ReadOnly",False)
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","ReadOnly",False)

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","MinWidth","55")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","MinWidth","50")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","MinWidth","50")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","MinWidth","140")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","MinWidth","30")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","MinWidth","75")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","MinWidth","75")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","MinWidth","85")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","MinWidth","70")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","MinWidth","95")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","MinWidth","70")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","MinWidth","60")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","MinWidth","200")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUSTOMER_PO","MinWidth","115")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","MinWidth","26")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","MinWidth","26")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NAME_CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DESCRIPTION","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","OUTSIDE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PCS_REM1","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_Late","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","HeaderHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","HeaderHAlignment","Center")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","LOCATION","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRODUCT_LINE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DEPT","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","QTY_ORDER","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","CellHAlignment","Center")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","CellHAlignment","Center")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE","CellBackColor","LightYellow")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","WO_NOTE2","CellBackColor","LightYellow")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","CellForeColor","Blue")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","CellForeColor","Blue")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","CellForeColor","Blue")

	F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
	F.Intrinsic.File.Exists(V.Local.sGabFile,V.Global.bExists)
	F.Intrinsic.Control.If(V.Global.bExists)
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER","CellForeColor","Blue")
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","NEXT_OPER","CellForeColor","Blue")
	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Issued","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FullAllocated","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Phs_late","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Ready","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","Late","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRINTED","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","RELEASED","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","FLAG_HOLD","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","JOB","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SUFFIX","Fixed","Left")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","PRIORITY","Fixed","Left")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","EST_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","ACT_HRS","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","REM_HRS","DisplayCustomNumeric","#,###,###,##0.00")

'	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_START","DisplayCustomDatetime","d")

	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SCHEDULED_DUE_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","CUR_OPER_DATE","DisplayCustomDatetime","d")
	Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","SHIP_TO_OP","DisplayCustomDatetime","d")

	'Set column color based on Late/Not Late
	gui.FrmMaster.GsGCIndWOs.AddStyleFormatCondition("gvInd","Late","tagLategvInd","equal","True")
	gui.FrmMaster.GsGCIndWOs.SetStyleFormatConditionProperty("gvInd","Late","tagLategvInd","backcolor","Pink")
	
	'Set column color based on Phs Late/Not Phs Late
	gui.FrmMaster.GsGCIndWOs.AddStyleFormatCondition("gvInd","Phs_Late","tagPhs_LategvInd","equal","True")
	gui.FrmMaster.GsGCIndWOs.SetStyleFormatConditionProperty("gvInd","Phs_Late","tagPhs_LategvInd","backcolor","Yellow")	
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmMaster.GsGCIndWOs.SetColumnProperty("gvInd","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","EST_HRS","SUM_EST_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","ACT_HRS","SUM_ACT_HRS","Sum","","","n")
	Gui.FrmMaster.GsGCIndWOs.AddSummaryItem("gvInd","REM_HRS","SUM_REM_HRS","Sum","","","n")

	Gui.FrmMaster.GsGCIndWOs.ResumeLayout()
	Gui.FrmMaster.GsGCIndWOs.MainView("gvInd")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadGVIndWOs.End

Program.Sub.Color_Ready_And_FullAllocated.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare

	'Set column color based on Ready/Not Ready
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","Ready","tagReadygvMJ","equal","Y")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","Ready","tagReadygvMJ","backcolor","LightGreen")	
	
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","Ready","tagReadygvMS","equal","Y")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","Ready","tagReadygvMS","backcolor","LightGreen")	
	
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","Ready","tagReadygvAll","equal","Y")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","Ready","tagReadygvAll","backcolor","LightGreen")	
	
	'FullAllocated
	'Set column color based on FullAllocated/Not FullAllocated
	gui.FrmMaster.GsGCMJ.AddStyleFormatCondition("gvMJ","FullAllocated","tagFullAllocatedgvMJ","equal","True")
	gui.FrmMaster.GsGCMJ.SetStyleFormatConditionProperty("gvMJ","FullAllocated","tagFullAllocatedgvMJ","backcolor","LightBlue")	
	
	gui.FrmMaster.GsGCMS.AddStyleFormatCondition("gvMS","FullAllocated","tagFullAllocatedgvMS","equal","True")
	gui.FrmMaster.GsGCMS.SetStyleFormatConditionProperty("gvMS","FullAllocated","tagFullAllocatedgvMS","backcolor","LightBlue")	
	
	gui.FrmMaster.GsGCAll.AddStyleFormatCondition("gvAll","FullAllocated","tagFullAllocatedgvAll","equal","True")
	gui.FrmMaster.GsGCAll.SetStyleFormatConditionProperty("gvAll","FullAllocated","tagFullAllocatedgvAll","backcolor","LightBlue")	
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Color_Ready_And_FullAllocated.End

Program.Sub.GsGCAll_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sSeq.Declare
	V.Local.SCurDate.Declare
	v.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare
	V.Local.sPath.Declare
	V.Local.bExists.Declare
	v.Local.srptLoc.Declare(String)
	V.Local.iBIRunId.Declare(Long)
	V.Local.iLogID.Declare(Long)
	V.Local.iRptId.Declare(Long)
	v.Local.sValues.Declare(String)
	v.Local.iRet.Declare(Long)
	v.Local.sRet.Declare(String)
	v.Local.iCnt.Declare(Long)
	v.Local.sFilter.Declare(String)
	


	f.Intrinsic.Control.If(v.Screen.FrmMaster!optAlloc.Value,=,"True")
		F.Intrinsic.Task.LaunchGSSsync("INV060","-c","")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIF	

	
	v.Local.bIssue.Declare
	v.Local.bIssue.Set(v.DataTable.dtAll(v.Args.RowIndex).Issued!FieldValString)
	f.Intrinsic.Control.If(v.Local.bIssue)
		'Processing the "old" dtAll
		F.Intrinsic.Control.SelectCase(v.Args.Column)
			F.Intrinsic.Control.Case("JOB")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("SUFFIX")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
'			f.Intrinsic.Control.Case("DISPLAY_PART")
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
'					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
'					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
'				F.Intrinsic.Control.Else
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
'					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
'					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
'				F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.Case("DISPLAY_PART")
					'Open Supply and Demand Screen
					F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
					F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.Control.If(V.Local.bExists)
						F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.Local.sPart)
						F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.Local.sLoc)
						Gui.FrmMaster..Enabled(False)
						F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
					F.Intrinsic.Control.Else
						F.Data.DataTable.AddRow("300011","Part",V.Local.sPart,"Location",V.Local.sLoc,"Switch","")
						Gui.FrmMaster..Enabled(False)
						F.Intrinsic.Control.CallSub(300011Sync)
					F.Intrinsic.Control.EndIf
					Gui.FrmMaster..Enabled(True)
					Gui.FrmMaster..SetFocus

	
			F.Intrinsic.Control.Case("PRINTED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,True)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,True)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"PRINTED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf	
													
			F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
				F.Intrinsic.Control.If(V.Global.bExists)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
						F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
						F.Intrinsic.Control.If(V.Local.sWC,<>,"")
							F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
							F.Intrinsic.String.Build("{0}\PPT_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
'							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
							F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
							F.Intrinsic.Control.If(V.Local.sWG,<>,"")
								F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
								F.Intrinsic.String.Build("{0}\PPT_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
								F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
								F.Global.General.ResetPassedDataElements
'								Gui.FrmMaster.cmdRefresh.BackColor(255)
								Gui.FrmMaster.lblStatus.ForeColor(255)
								Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
								Gui.FrmMaster.lblStatus.Visible(True)
							F.Intrinsic.Control.Else
								F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("FLAG_HOLD")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue)
						V.Local.sHold.Set("N")
						V.Local.iHold.Set(0)
						V.Local.bHold.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,False)
					F.Intrinsic.Control.Else
						V.Local.sHold.Set("Y")
						V.Local.iHold.Set(1)
						V.Local.bHold.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,True)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("RELEASED")
				
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)						
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),False)
						f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",False)
						F.Intrinsic.Control.Next(v.Local.iCnt)	
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
'					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Case("CLOSE_THE_OP")
			f.Intrinsic.String.Format(v.Ambient.Date.PervasiveDate,"YYMMDD",V.Local.SCurDate)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET FLAG_CLOSED =  'Y', DATE_COMPLETED = '{3}' WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}';",V.Local.sJob,V.Local.sSuf,V.Local.sSeq,v.Local.SCurDate,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						'V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","CLOSE_THE_OP",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET FLAG_CLOSED =  '', DATE_COMPLETED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}';",V.Local.sJob,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					'V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","CLOSE_THE_OP",V.Args.RowIndex,False)
					F.Intrinsic.Control.EndIf						
				F.Intrinsic.Control.EndIf	
	
		F.Intrinsic.Control.EndSelect
	
	
	'Processing the "old" MJMS
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.SelectCase(v.Args.Column)
			f.Intrinsic.Control.Case("JOB")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("SUFFIX")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",v.Args.RowIndex,v.Local.sTemp)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
					F.Global.General.CallWrapperSync(50,"JB0057")
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
					'Build Call Wrapper String
					F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
					F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
					F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.Else
					'Build Call Wrapper String
					F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
					F.Intrinsic.Control.CallSub(lockscreen)
					F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
					F.Intrinsic.Control.CallSub(enablescreen)
				F.Intrinsic.Control.EndIf
	
'			f.Intrinsic.Control.Case("DISPLAY_PART")
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
'					F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
'					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
'				F.Intrinsic.Control.Else
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
'					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
'					F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
'					F.Global.General.CallWrapperSync(300011,V.Local.sParams)
'				F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.Case("DISPLAY_PART")
					'Open Supply and Demand Screen
					F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
					F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PART",V.Args.RowIndex,V.Local.sPart)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","LOCATION",V.Args.RowIndex,V.Local.sLoc)
					F.Intrinsic.Control.If(V.Local.bExists)
						F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.Local.sPart)
						F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.Local.sLoc)
						Gui.FrmMaster..Enabled(False)
						F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
					F.Intrinsic.Control.Else
						F.Data.DataTable.AddRow("300011","Part",V.Local.sPart,"Location",V.Local.sLoc,"Switch","")
						Gui.FrmMaster..Enabled(False)
						F.Intrinsic.Control.CallSub(300011Sync)
					F.Intrinsic.Control.EndIf
					Gui.FrmMaster..Enabled(True)
					Gui.FrmMaster..SetFocus
	
'			F.Intrinsic.Control.Case("PRINTED")
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
'					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
'						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,True)
'						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
'						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'						f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
'						F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
'					F.Intrinsic.Control.EndIf
'					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
'						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
'						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'						F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
'						F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
'					F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.EndIf	
	
			F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
				F.Intrinsic.Control.If(V.Global.bExists)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
						F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
						F.Intrinsic.Control.If(V.Local.sWC,<>,"")
							F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
							F.Intrinsic.String.Build("{0}\PPT_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
'							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
							F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
							F.Intrinsic.Control.If(V.Local.sWG,<>,"")
								F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
								F.Intrinsic.String.Build("{0}\PPT_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
								F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
								F.Global.General.ResetPassedDataElements
'								Gui.FrmMaster.cmdRefresh.BackColor(255)
								Gui.FrmMaster.lblStatus.ForeColor(255)
								Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
								Gui.FrmMaster.lblStatus.Visible(True)
							F.Intrinsic.Control.Else
								F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("FLAG_HOLD")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue)
						V.Local.sHold.Set("N")
						V.Local.iHold.Set(0)
						V.Local.bHold.Set(False)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,False)
					F.Intrinsic.Control.Else
						V.Local.sHold.Set("Y")
						V.Local.iHold.Set(1)
						V.Local.bHold.Set(True)
						Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","FLAG_HOLD",V.Args.RowIndex,True)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
	
			F.Intrinsic.Control.Case("RELEASED")
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)						
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),False)
						f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",False)
						F.Intrinsic.Control.Next(v.Local.iCnt)	
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
'					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Case("PRINTED")
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,True)
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",V.Args.RowIndex,True)					
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","PRINTED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"PRINTED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)							
						
						f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900100,V.Local.sTemp)						
											
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,v.Local.sJob)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
						F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
						F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
					F.Intrinsic.Control.EndIf

				F.Intrinsic.Control.EndIf	

			F.Intrinsic.Control.Case("CLOSE_THE_OP")
			f.Intrinsic.String.Format(v.Ambient.Date.PervasiveDate,"YYMMDD",V.Local.SCurDate)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
					F.Intrinsic.Control.If(V.Args.CellValue,=,False)
						F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET FLAG_CLOSED =  'Y', DATE_COMPLETED = '{3}' WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}';",V.Local.sJob,V.Local.sSuf,V.Local.sSeq,v.Local.SCurDate,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						'V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","CLOSE_THE_OP",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET FLAG_CLOSED =  '', DATE_COMPLETED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}';",V.Local.sJob,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					'V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","CLOSE_THE_OP",V.Args.RowIndex,False)
					F.Intrinsic.Control.EndIf						
				F.Intrinsic.Control.EndIf				
	
		F.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_RowCellClick.End

Program.Sub.GsGCAll_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	v.Local.sSeq.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	V.Local.sPriority.Declare
	v.Local.sRank.Declare
	v.Local.sPallet.Declare
	v.Local.bPulled.Declare
	v.Local.sPerm_pallet.Declare
	V.Local.sNewWC.Declare
	v.Local.sWC.Declare
	v.Local.bIssue.Declare
	V.Local.sFilter.Declare
	v.Local.bIssue.Set(v.DataTable.dtAll(v.Args.RowIndex).Issued!FieldValString)
	
	V.Local.sJob.Declare
	v.local.sRet.Declare
	v.local.iCnt.Declare
	V.Local.bRel.Declare
	V.Local.sWONote.Declare
	
	
	F.Intrinsic.Control.if(V.Args.column.UCase,=,"TOOLING","OR",V.Args.column.UCase,=,"QUALITYGAUGES")
		Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
		Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
		Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
		F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
		F.Intrinsic.Control.If(v.DataView.dtAll!DVSO.Exists,=,True)
			f.Data.DataView.Close("dtAll","DVSO")
		F.Intrinsic.Control.EndIf
		f.Intrinsic.String.Build("JOB='{0}' and SUFFIX = '{1}' and SEQ = '{2}' ",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sFilter)
		f.Data.DataView.Create("dtAll","DVSO",22,V.Local.sFilter,"")	
		Function.Data.DataView.SetValue("dtAll","DVSO",-1,V.Args.column,V.Args.Value)
		f.Data.DataTable.AcceptChanges("dtAll")
		F.ODBC.Connection!con.OpenLocalRecordsetRW("rst",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.con!rst.EOF,=,True)
			F.ODBC.con!rst.AddNew
			F.ODBC.con!rst.Set!JOB(V.Local.sWO)
			F.ODBC.con!rst.Set!SUFFIX(V.Local.sSuf)
			F.ODBC.con!rst.Set!SEQUENCE(V.Local.sSeq)
		F.Intrinsic.Control.EndIf
		f.Intrinsic.String.StripCharacters(V.Args.column,V.Local.sText)
		F.ODBC.con!rst.Set![V.Local.sText](V.DataTable.dtAll(V.Args.RowIndex).[V.Args.column.UCase]!FieldVal)
		F.ODBC.con!rst.Update
		F.ODBC.con!rst.Close
		f.Data.DataView.Close("dtAll","DVSO")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.endif		
	'Process the "old" dtAll
	f.Intrinsic.Control.If(v.Local.bIssue)	
		F.Intrinsic.Control.SelectCase(V.Args.column.UCase)
		
			F.Intrinsic.Control.Case("RELEASED")

				
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.Value,=,True)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)						
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),False)
						f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",False)
						F.Intrinsic.Control.Next(v.Local.iCnt)	
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
'					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
		   
			F.Intrinsic.Control.Case("WO_NOTE")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PRIORITY5941",V.Args.RowIndex,V.Local.sPriority)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","RANK",V.Args.RowIndex,V.Local.sRank)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PALLET",V.Args.RowIndex,V.Local.sPallet)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PULLED",V.Args.RowIndex,V.Local.bPulled)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PERM_PALLET",V.Args.RowIndex,V.Local.sPerm_pallet)
				
				'V.Local.sWONote.Set(V.DataTable.dtAll(V.Args.RowIndex).WO_NOTE!FieldValTrim)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,NOTES) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
				
				F.Intrinsic.Control.Case("PRIORITY5941")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PRIORITY) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PRIORITY = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
				
				F.Intrinsic.Control.Case("RANK")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,RANK) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET RANK = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close				

				F.Intrinsic.Control.Case("PALLET")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PALLET) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PALLET = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close	

				F.Intrinsic.Control.Case("PULLED")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				f.Intrinsic.Control.If(v.Local.sTextTbl,=,"True")
					v.Local.sTextTbl.Set("1")
				f.Intrinsic.Control.Else
					v.Local.sTextTbl.Set("0")
				f.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PULLED) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PULLED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close	
				
				F.Intrinsic.Control.Case("NewWC")				
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","WORKCENTER",V.Args.RowIndex,V.Local.sWC)
						V.Local.sNewWC.Set(V.Args.Value)
						F.Intrinsic.Control.If(V.Local.sNewWC.Trim,<>,V.Local.sWC.Trim)
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"Sel",True)
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"WORKCENTER",V.Local.sNewWC.Trim)	
							F.Intrinsic.Control.CallSub(lockscreen)
							F.Intrinsic.Control.BlockEvents
							F.Intrinsic.Control.CallSub("cmdSched_Click")							
							F.Intrinsic.Control.CallSub(enablescreen)
							F.Intrinsic.Control.UnBlockEvents
							'gui.FrmMaster.GsGCAll.SetFocus()
						F.Intrinsic.Control.Else
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"Sel",False)
						F.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Else
						F.Intrinsic.UI.Msgbox("Edit Mode is Required.")
						F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"NEWWC","")
					f.Intrinsic.Control.EndIf

'				F.Intrinsic.Control.Case("PERM_PALLET")
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
'				
'				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'				F.Intrinsic.String.Build("SELECT * FROM GCG_5941_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
'				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
'				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
'					F.Intrinsic.String.Build("INSERT INTO GCG_5941_WO_NOTES(JOB,SUFFIX,SEQUENCE,PERM_PALLET) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
'					F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.Else
'					F.Intrinsic.String.Build("UPDATE GCG_5941_WO_NOTES SET PERM_PALLET = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
'					F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.EndIf
'				F.ODBC.con!rstNotes.Close	
		
			F.Intrinsic.Control.Case("WO_NOTE2")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
				F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
		F.Intrinsic.Control.EndSelect		
	
	'Process the "old" dtMJMS
	f.Intrinsic.Control.Else
		F.Intrinsic.Control.SelectCase(V.Args.column.UCASE)
	
			F.Intrinsic.Control.Case("RELEASED")
'				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sJob)
					Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
					F.Intrinsic.Control.If(V.Args.Value,=,True)
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = 'Y', DATE_RELEASED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Ambient.Date.FormatMMDDYY,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(True)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
							'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),True)
							f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",True)
						F.Intrinsic.Control.Next(v.Local.iCnt)						
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,True)
					F.Intrinsic.Control.Else
						'F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_RELEASED = '', DATE_RELEASED = '000000' WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
						F.ODBC.Connection!con.Execute(V.Local.sSQL)
						V.Local.bRel.Set(False)
						
						f.Intrinsic.String.Build("JOB = '{0}' AND SUFFIX = '{1}'",V.Local.sJob,V.Local.sSuf,V.Local.sFilter)
						f.Data.DataTable.Select("dtAll",v.Local.sFilter,v.Local.sRet)
						F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)												
						F.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRet.UBound,1)
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",v.Local.sRet(v.Local.iCnt),False)
						f.data.datatable.setValue("dtAll",v.local.sRet(v.local.iCnt),"RELEASED",False)
						F.Intrinsic.Control.Next(v.Local.iCnt)	
						'Gui.FrmMaster.GsGCAll.SetCellValueByColumnName("gvAll","RELEASED",V.Args.RowIndex,False)
'					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Case("WO_NOTE")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PRIORITY5941",V.Args.RowIndex,V.Local.sPriority)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","RANK",V.Args.RowIndex,V.Local.sRank)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PALLET",V.Args.RowIndex,V.Local.sPallet)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PULLED",V.Args.RowIndex,V.Local.bPulled)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PERM_PALLET",V.Args.RowIndex,V.Local.sPerm_pallet)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,NOTES) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
				
				F.Intrinsic.Control.Case("PRIORITY5941")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PRIORITY) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PRIORITY = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
				
				F.Intrinsic.Control.Case("RANK")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,RANK) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET RANK = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close				

				F.Intrinsic.Control.Case("PALLET")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PALLET) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PALLET = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close	

				F.Intrinsic.Control.Case("PULLED")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
				
				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
				f.Intrinsic.Control.If(v.Local.sTextTbl,=,"True")
					v.Local.sTextTbl.Set("1")
				f.Intrinsic.Control.Else
					v.Local.sTextTbl.Set("0")
				f.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("SELECT * FROM GCG_5987_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO GCG_5987_WO_NOTES(JOB,SUFFIX,SEQUENCE,PULLED) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE GCG_5987_WO_NOTES SET PULLED = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close	
				
				F.Intrinsic.Control.Case("NewWC")				
					F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","WORKCENTER",V.Args.RowIndex,V.Local.sWC)
						V.Local.sNewWC.Set(V.Args.Value)
						F.Intrinsic.Control.If(V.Local.sNewWC.Trim,<>,V.Local.sWC.Trim)
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"Sel",True)
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"WORKCENTER",V.Local.sNewWC)					
							F.Intrinsic.Control.CallSub(lockscreen)
							F.Intrinsic.Control.CallSub("cmdSched_Click")							
							F.Intrinsic.Control.CallSub(enablescreen)
							'gui.FrmMaster.GsGCAll.SetFocus()
						F.Intrinsic.Control.Else
							F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"Sel",False)
						F.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Else
						F.Intrinsic.UI.Msgbox("Edit Mode is Required.")
						F.Data.DataTable.SetValue("dtAll",V.Args.RowIndex,"NEWWC","")
					f.Intrinsic.Control.EndIf

'				F.Intrinsic.Control.Case("PERM_PALLET")
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
'				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Args.RowIndex,V.Local.sSeq)
'				
'				F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
'				F.Intrinsic.String.Build("SELECT * FROM GCG_5941_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}';",V.Local.sWO,V.Local.sSuf,v.Local.sSeq,V.Local.sSQL)
'				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
'				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
'					F.Intrinsic.String.Build("INSERT INTO GCG_5941_WO_NOTES(JOB,SUFFIX,SEQUENCE,PERM_PALLET) VALUES('{0}','{1}','{2}','{3}');",V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sTextTbl,V.Local.sSQL)
'					F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.Else
'					F.Intrinsic.String.Build("UPDATE GCG_5941_WO_NOTES SET PERM_PALLET = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}' AND SEQUENCE = '{3}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSeq,V.Local.sSQL)
'					F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.EndIf
'				F.ODBC.con!rstNotes.Close	

			F.Intrinsic.Control.Case("WO_NOTE2")
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Args.RowIndex,V.Local.sWO)
				Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
				F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
				F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
				F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
					F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl.PSQLFriendly,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl.PSQLFriendly,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.Control.EndIf
				F.ODBC.con!rstNotes.Close
	
		F.Intrinsic.Control.EndSelect

	
	f.Intrinsic.Control.EndIf


	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCAll_CellValueChanged.End

Program.Sub.GsGCMJ_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare

f.Intrinsic.UI.Msgbox("GsGCMJ")
f.Intrinsic.UI.Msgbox(v.Args.RowIndex)

	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
'						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
'							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvMJ","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCMJ.SetCellValueByColumnName("gvMJ","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvMJ","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMJ_RowCellClick.End

Program.Sub.GsGCMJ_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvMJ","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMJ.GetCellValueByColumnName("gvMJ","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvMJ","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMJ_CellValueChanged.End

Program.Sub.GsGCMS_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.sHold.Declare
	V.Local.iHold.Declare
	V.Local.bHold.Declare
	V.Local.bRel.Declare

f.Intrinsic.UI.Msgbox("GsGCMS")
	f.Intrinsic.UI.Msgbox(v.Args.RowIndex)
	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","PART",V.Args.RowIndex,V.Local.sPart)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","LOCATION",V.Args.RowIndex,V.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","PART",V.Args.RowIndex,V.Local.sPart)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","LOCATION",V.Args.RowIndex,V.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!M",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
'						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
'							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvMS","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCMS.SetCellValueByColumnName("gvMS","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvMS","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMS_RowCellClick.End

Program.Sub.GsGCMS_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvMS","WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCMS.GetCellValueByColumnName("gvMS","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
	'		F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvMS","WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCMS_CellValueChanged.End

Program.Sub.GsGCIndWOs_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sTemp.Declare
	v.Local.sSuf.Declare
	v.Local.sJob.Declare
	V.Local.sPart.Declare
	v.Local.sLoc.Declare
	v.Local.stemp2.Declare
	v.Local.stemp3.Declare
	V.Local.sParams.Declare
	V.Local.iDayTrf.Declare
	V.Local.iMonthTrf.Declare
	V.Local.iYearTrf.Declare
	V.Local.sSQL.Declare
	V.Local.sWC.Declare
	V.Local.sWG.Declare
	V.Local.iPID.Declare
	V.Local.sGabFile.Declare
	V.Local.bRel.Declare

	f.Intrinsic.UI.Msgbox("GsGCIndWOs")
	f.Intrinsic.UI.Msgbox(v.Args.RowIndex)
	
	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("JOB")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("SUFFIX")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",v.Args.RowIndex,v.Local.sTemp)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",v.Args.RowIndex,V.Local.stemp2)
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optEdit.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2009,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optIssue.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.String.Build("{0}!*!{1}!*! !*! !*! !*! !*! ",V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450150,V.Local.sTemp)
				F.Global.General.CallWrapperSync(50,"JB0057")
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.ElseIf(V.Screen.FrmMaster!optWiptoFG.Value,=,"True")
				'Build Call Wrapper String
				F.Intrinsic.Date.Day(V.Ambient.Date,V.Local.iDayTrf)
				F.Intrinsic.Date.Month(V.Ambient.Date,V.Local.iMonthTrf)
				F.Intrinsic.Date.Year(V.Ambient.Date,V.Local.iYearTrf)
				F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!OS!*!!*!!*!!*!!*!!*!!*!{3}!*!{4}!*!16!*!03!*!02!*!!*!!*!!*!!*!!*!!*!!*!!*!!*!",V.Caller.CompanyCode,V.Caller.Terminal,V.Caller.Caller,V.Local.sTemp,V.Local.sTemp2,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(2003,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.Else
				'Build Call Wrapper String
				F.Intrinsic.String.Concat("7","!*!",V.Local.sTemp,"!*!",V.Local.sTemp2,"!*!","A",V.Local.sTemp)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Global.General.CallWrapperSync(450000,V.Local.sTemp)
				F.Intrinsic.Control.CallSub(enablescreen)
			F.Intrinsic.Control.EndIf

		f.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,True)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.Else
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","PART",v.Args.rowIndex,v.Local.sPart)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","LOCATION",v.Args.rowIndex,v.Local.sLoc)
				F.Intrinsic.String.Build("{0}!*!{1}!*!O",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
				F.Global.General.CallWrapperSync(300011,V.Local.sParams)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("PRINTED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","PRINTED",V.Args.RowIndex,True)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,v.Local.sJob)
					Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,v.Local.sSuf)
'					F.Intrinsic.Control.CallSub(printpicklist,"Job",V.Local.sJob,"Suffix",V.Local.sSuf)
					F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}",V.Local.sJob,V.Local.sSuf,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900200,V.Local.sTemp)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CaseAny("CUR_OPER","NEXT_OPER")
			F.Intrinsic.Control.If(V.Global.bExists)
				F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
					F.Intrinsic.String.Build("SELECT MACHINE FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Args.CellValue,V.Local.sSQL)
					F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWC)
					F.Intrinsic.Control.If(V.Local.sWC,<>,"")
						F.Global.General.SetPassedDataElement("WC",V.Local.sWC)
						F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
						F.Global.General.CallAsyncGAS(V.Local.sGabFile,V.Local.iPID)
						F.Global.General.ResetPassedDataElements
'						Gui.FrmMaster.cmdRefresh.BackColor(255)
						Gui.FrmMaster.lblStatus.ForeColor(255)
						Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
						Gui.FrmMaster.lblStatus.Visible(True)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("SELECT WORK_GROUP FROM WORKGROUP_HEAD WHERE WORK_GROUP = '{0}';",V.Args.CellValue,V.Local.sSQL)
						F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sWG)
						F.Intrinsic.Control.If(V.Local.sWG,<>,"")
							F.Global.General.SetPassedDataElement("WG",V.Local.sWG)
							F.Intrinsic.String.Build("{0}\GAB_4228_Repl_Upd_Resched_Utility.g2u",V.Caller.GasDir,V.Local.sGabFile)
							F.Global.General.CallSyncGAS(V.Local.sGabFile,V.Local.iPID)
							F.Global.General.ResetPassedDataElements
'							Gui.FrmMaster.cmdRefresh.BackColor(255)
							Gui.FrmMaster.lblStatus.ForeColor(255)
							Gui.FrmMaster.lblStatus.Caption("NOTE: Refresh Master Schedule to pickup changes from WC Dashboard")
							Gui.FrmMaster.lblStatus.Visible(True)
						F.Intrinsic.Control.Else
							F.Intrinsic.UI.Msgbox("Not a valid WC or WG.","WC/WG Check")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("FLAG_HOLD")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue)
					V.Local.sHold.Set("N")
					V.Local.iHold.Set(0)
					V.Local.bHold.Set(False)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","FLAG_HOLD",V.Args.RowIndex,False)
				F.Intrinsic.Control.Else
					V.Local.sHold.Set("Y")
					V.Local.iHold.Set(1)
					V.Local.bHold.Set(True)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","FLAG_HOLD",V.Args.RowIndex,True)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_HOLD = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
				F.Intrinsic.String.Build("UPDATE APSV3_JBMASTER SET HOLD = '{0}' WHERE JOB = '{1}' AND SFX = '{2}';",V.Local.iHold,V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bHold,"GV","gvInd","Flag","FLAG_HOLD")
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case("RELEASED")
			F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sJob)
				Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
				F.Intrinsic.Control.If(V.Args.CellValue,=,False)
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = '' Then 'X' WHEN FLAG_WO_PRTD = 'Y' Then 'R' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(True)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","RELEASED",V.Args.RowIndex,True)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("UPDATE JOB_HEADER SET FLAG_WO_PRTD = CASE WHEN FLAG_WO_PRTD = 'X' Then '' WHEN FLAG_WO_PRTD = 'R' Then 'Y' END WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sJob,V.Local.sSuf,V.Local.sSQL)
					F.ODBC.Connection!con.Execute(V.Local.sSQL)
					V.Local.bRel.Set(False)
					Gui.FrmMaster.GsGCIndWOs.SetCellValueByColumnName("gvInd","RELEASED",V.Args.RowIndex,False)
				F.Intrinsic.Control.EndIf
'				F.Intrinsic.Control.CallSub(checkflag,"WO",V.Local.sJob,"Suf",V.Local.sSuf,"bFlag",V.Local.bRel,"GV","gvInd","Flag","FLAG_REL")
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCIndWOs_RowCellClick.End

Program.Sub.GsGCIndWOs_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	v.Local.sWO.Declare
	v.Local.sSuf.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare

	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("WO_NOTE")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_4169_WO_NOTES WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_4169_WO_NOTES(JOB,SUFFIX,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_4169_WO_NOTES SET NOTES = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
'			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Args.VALUE,"GV","gvInd","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE")

		F.Intrinsic.Control.Case("WO_NOTE2")
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","JOB",V.Args.RowIndex,V.Local.sWO)
			Gui.FrmMaster.GsGCIndWOs.GetCellValueByColumnName("gvInd","SUFFIX",V.Args.RowIndex,V.Local.sSuf)
			F.Intrinsic.String.Left(V.Args.Value,70,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM WO_USER_FLDS WHERE JOB = '{0}' AND SUFFIX = '{1}';",V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO WO_USER_FLDS(JOB,SUFFIX,USER_6) VALUES('{0}','{1}','{2}');",V.Local.sWO,V.Local.sSuf,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE WO_USER_FLDS SET USER_6 = '{0}' WHERE JOB = '{1}' AND SUFFIX = '{2}';",V.Local.sTextTbl,V.Local.sWO,V.Local.sSuf,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
'			F.Intrinsic.Control.CallSub(checknote,"WO",V.Local.sWO,"Suf",V.Local.sSuf,"Note",V.Local.sText,"GV","gvInd","RowIndex",V.Args.RowIndex,"WO_Note","WO_NOTE2")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.GsGCIndWOs_CellValueChanged.End

Program.Sub.cmdExport_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

	F.Intrinsic.Control.SelectCase(V.Screen.FrmMaster!tabMaster.Tab)
		F.Intrinsic.Control.Case(0)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GCG_5987_All_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.Export(V.Local.sFileExport,"xlsx")					
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GCG_5987_All_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCAll.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case(1)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5987_MJ_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMJ.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5987_MJ_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMJ.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.Case(2)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_MS_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMS.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_MS_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCMS.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.Case(3)
			F.Intrinsic.Control.If(V.Local.bExcel)
				F.Intrinsic.String.Build("{0}\GAB_5669_IndWOs_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCIndWOs.Export(V.Local.sFileExport,"xlsx")
					F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GAB_5669_IndWOs_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
				F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
				F.Intrinsic.Control.If(V.Local.bFileLocked)
					F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
				F.Intrinsic.Control.Else
					Gui.FrmMaster.GsGCIndWOs.Export(V.Local.sFileExport,"csv")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.cmdNew_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt)

	F.Intrinsic.Control.CallSub(lockscreen)
	F.Global.General.CallWrapperSync(2009,"*!*!!*!N")

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM JOB_HEADER;",V.Local.iRowCnt2)

	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdNew_Click.End

Program.Sub.PrintPicklist.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'PreProc for Printing Material Picklist from Dashboard

	V.Local.iBIRunID.Declare
	V.Local.iBILogID.Declare
	V.local.iRet.Declare
	V.Local.iRptID.Declare
	V.Local.sParams.Declare
	V.Local.sValues.Declare

	F.Global.BI.GetIDFromName("GCG_5987_Mat_Picklist.rpt",V.Local.iRptID)

	F.Global.BI.GetRunID(V.Local.iBIRunID)
	F.Global.BI.StartLogging(V.Local.iBIRunID,V.Local.iRptID,0,"",V.Local.iBILogID)

	F.Intrinsic.String.Split("JOB*!*SUFFIX","*!*",V.Local.sParams)
	F.Intrinsic.String.Build("{0}*!*{1}",V.Args.Job,V.Args.Suffix,V.Local.sValues)
	F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)

	F.Intrinsic.Control.If(V.Local.iRptID,<,0)
		F.Intrinsic.UI.Msgbox("GAB_5987_Mat_Picklist.rpt is not set in your system","Report not found")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Global.BI.RunReportPreProcessor(V.Local.iBIRunID,V.Local.iBILogID,V.Local.sParams,V.Local.sValues,"",-1,True,"",-1,"",-1,"","",V.Local.iRet)
	F.Intrinsic.Control.EndIf

	F.Global.BI.StopLogging(V.Local.iBILogID)

'	F.Global.BI.PrintReport(V.Local.iRepID,0,V.Local.sName,V.Local.sValue,False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.PrintPicklist.End

Program.Sub.SavePrint.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,1000,False,"Barcode",True,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,1000,False,"Barcode",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,2000,False,"Picklist",True,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,2000,False,"Picklist",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist2.Value,=,1)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,False,"Picklist2",True,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,False,"Picklist2",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SavePrint.End

Program.Sub.picGSSLogo_DblClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Show
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.frmWeb_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Visible(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.frmWeb_UnLoad.End

Program.Sub.cmdGSS_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdGSS_Click.End

Program.Sub.cmdServ_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-service.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdServ_Click.End

Program.Sub.cmdUpd_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-updates.com/","","",0)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdUpd_Click.End

Program.Sub.CheckRefreshLock.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sLabel.Declare
	V.Local.bRet.Declare
	V.Local.sRet.Declare
	V.Local.dRet.Declare
	V.Local.sMsg.Declare

	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,4000,0,"",V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,4000,3,"",V.Local.dRet)
		F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,4000,5,"",V.Local.sRet)
		F.Intrinsic.String.Split(V.Local.sRet,"-",V.Local.sRet)
		F.Intrinsic.String.Build("Dashboard is currently being refreshed by {0} with a cutoff date of {1}.",V.Local.sRet(1),V.Local.dRet,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Refresh Locked")
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Refresh Lock-{0}",V.Caller.User,V.Local.sLabel)
		F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,4000,False,V.Local.sLabel,True,0,-999.0,V.Screen.FrmMaster!dtpCutDt.Value,)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckRefreshLock.End

Program.Sub.txtCutDays_Change.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iDays.Declare
	V.Local.dCutDt.Declare

	F.Intrinsic.Control.If(V.Screen.FrmMaster!txtCutDays.Text,=,"")
		V.Local.iDays.Set(0)
	F.Intrinsic.Control.Else
		V.Local.iDays.Set(V.Screen.FrmMaster!txtCutDays.Text)
	F.Intrinsic.Control.EndIf
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5987,3000,False,"Cutoff Days",False,V.Local.iDays,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Date.DateAdd("D",V.Screen.FrmMaster!txtCutDays.Text,V.Ambient.Date,V.Local.dCutDt)
	Gui.FrmMaster.dtpCutDt.Value(V.Local.dCutDt)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.txtCutDays_Change.End

Program.Sub.dtpCutDt_Change.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iDays.Declare

	F.Intrinsic.Date.DateDiff("D",V.Ambient.Date,V.Screen.FrmMaster!dtpCutDt.Value,V.Local.iDays)
	Gui.FrmMaster.txtCutDays.Text(V.Local.iDays)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.dtpCutDt_Change.End

Program.Sub.cmdResetGsGC_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
	F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 5987 And Seq = 1000;")
	F.ODBC.Connection!common.Close
	
	Gui.frmWeb..Visible(False)
	F.Intrinsic.Control.CallSub("Load")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdResetGsGC_Click.End

Program.Sub.Serialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'gvAll
	Gui.FrmMaster.GsGCAll.Serialize("gvAll",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5987,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'	'gvMJ
'	Gui.FrmMaster.GsGCMJ.Serialize("gvMJ",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVMJ",5941,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'	'gvMS
'	Gui.FrmMaster.GsGCMS.Serialize("gvMS",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVMS",5941,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'	'gvInd
'	Gui.FrmMaster.GsGCIndWOs.Serialize("gvInd",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVIND",5941,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'Delete old registry records
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5987,0,5,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 5987 And Seq < 1000;")
		F.ODBC.Connection!common.Close
	F.Intrinsic.Control.EndIf

'	'gvAll
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALL",5987,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmMaster.GsGCAll.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
'	'gvMJ
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVMJ",5941,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
'		Gui.FrmMaster.GsGCMJ.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
'	'gvMS
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVMS",5941,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
'		Gui.FrmMaster.GsGCMS.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
'	'gvInd
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVIND",5941,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
'		Gui.FrmMaster.GsGCIndWOs.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.LoadDDLists.Start
'F.Intrinsic.Control.Try
'	V.Local.sError.Declare
'	V.Local.iCnt.Declare

'	F.ODBC.Connection!con.OpenRecordsetRO("rstDdlWC","SELECT MACHINE FROM WORKCENTERS ORDER BY MACHINE;")
'	F.Intrinsic.Control.DoUntil(V.ODBC.con!rstDdlWC.EOF,=,True)
'		Gui.FrmMaster.ddlWC.AddItem(V.ODBC.con!rstDdlWC.FieldValTrim!MACHINE,V.Local.iCnt)
'		F.Intrinsic.Control.If(V.ODBC.con!rstDdlWC.EOF)
'			F.Intrinsic.String.Build("{0}{1}",V.Global.sWCList,V.ODBC.con!rstDdlWC.FieldValTrim!MACHINE,V.Global.sWCList)
'		F.Intrinsic.Control.Else
'			F.Intrinsic.Control.If(V.Global.sWCList,=,"")
'				V.Global.sWCList.Set(V.ODBC.con!rstDdlWC.FieldValTrim!MACHINE)
'			F.Intrinsic.Control.Else
'				F.Intrinsic.String.Build("{0}*!*{1}",V.Global.sWCList,V.ODBC.con!rstDdlWC.FieldValTrim!MACHINE,V.Global.sWCList)
'			F.Intrinsic.Control.EndIf
'		F.Intrinsic.Control.EndIf
'		F.Intrinsic.Math.Add(V.Local.iCnt,1,V.Local.iCnt)
'	F.ODBC.con!rstDdlWC.MoveNext
'	F.Intrinsic.Control.Loop

'	F.ODBC.Connection!con.OpenRecordsetRO("rstDdlWG","SELECT WORK_GROUP,WORK_GROUP FROM WORKGROUP_HEAD;")
'	F.Intrinsic.Control.DoUntil(V.ODBC.con!rstDdlWG.EOF,=,True)
'		Gui.FrmMaster.ddlWC.AddItem(V.ODBC.con!rstDdlWG.FieldValTrim!WORK_GROUP,V.Local.iCnt)
'		F.Intrinsic.Math.Add(V.Local.iCnt,1,V.Local.iCnt)
'	F.ODBC.con!rstDdlWG.MoveNext
'	F.Intrinsic.Control.Loop

'F.Intrinsic.Control.Catch
'	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
'	F.Intrinsic.UI.Msgbox(V.Local.sError)
'	F.Intrinsic.Control.CallSub("Unload")
'F.Intrinsic.Control.EndTry
Program.Sub.LoadDDLists.End

Program.Sub.cmdSched_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSched.Declare
	V.Local.iRet.Declare
	V.Local.sRet.Declare
	V.Local.bSel.Declare
	V.Local.bSched.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sSeq.Declare
	V.Local.sPriority.Declare
	V.Local.sWC.Declare
	V.Local.sWCDesc.Declare
	V.Local.fWCRate.Declare
	V.Local.fWCCrewSize.Declare
	V.Local.fWCFloat.Declare
	V.Local.fWCPerMod.Declare
	V.Local.sStartDate.Declare
	V.Local.sDueDate.Declare
	V.Local.sParams500030.Declare
	V.Local.sParams5101.Declare
	V.Local.sParams5100.Declare
	V.Local.sSQL.Declare
	V.Local.iCnt.Declare
	V.Local.fSetup.Declare
	V.Local.fRuntime.Declare
	V.Local.sFile.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	v.Local.sSchedDir.Declare

	'Check for Temp WO File
	F.Intrinsic.String.Build("{0}\MMAST{1}",V.Caller.FilesDir,V.Caller.Terminal,V.Local.sFile)
	F.Intrinsic.File.IsFileLocked(V.Local.sFile,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("{0} is currently locked. Close Work Order maintenance screen and try again.",V.Local.sFile,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Work Order Locked")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf

'	F.Intrinsic.Control.If(V.Screen.frmResched!optBwd.Value)
'		V.Local.sSched.Set("B")
'	F.Intrinsic.Control.ElseIf(V.Screen.frmResched!optFwd.Value)
'		V.Local.sSched.Set("F")
'	F.Intrinsic.Control.ElseIf(V.Screen.frmResched!optHere.Value)
'		V.Local.sSched.Set("H")
'	F.Intrinsic.Control.EndIf

	Gui.FrmMaster.lblStatus.Caption("Scheduling Work Order....")
	Gui.FrmMaster.lblStatus.Visible(True)
	Gui.FrmMaster.pbStatus.Visible(True)
	Gui.FrmMaster.pbStatus.Min(0)

	'F.Intrinsic.UI.Msgbox("Are you sure you want to continue?","Schedule Selected?",4,V.Local.iRet)
	'F.Intrinsic.Control.If(V.Local.iRet,=,6)
		F.Intrinsic.Control.SelectCase(V.Screen.FrmMaster!tabMaster.Tab)
			F.Intrinsic.Control.Case(0)
				F.Intrinsic.Control.CallSub(lockscreen)
				F.Intrinsic.Control.If(V.DataTable.dtAll.Exists)
					Gui.frmResched.pbStatus.Max(V.DataTable.dtAll.RowCount)
					F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAll.RowCount--,1)
						Gui.frmResched.pbStatus.Value(V.Local.iCnt)
						Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","Sel",V.Local.iCnt,V.Local.bSel)
							F.Intrinsic.Control.If(V.Local.bSel,=,True)
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","JOB",V.Local.iCnt,V.Local.sJob)
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SUFFIX",V.Local.iCnt,V.Local.sSuffix)
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","SEQ",V.Local.iCnt,V.Local.sSeq)
								F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
								
								'get WO scheduing direction backward or forward
								F.Intrinsic.String.Build("select schedule_dir from v_job_header where job = '{0}' and suffix = '{1}'",V.Local.sJob.Trim,V.Local.sSuffix,V.Local.sSQL)
								F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,v.Local.sSchedDir)
								f.Intrinsic.Control.If(v.Local.sSchedDir.Trim,=,"1")
									V.Local.sSched.Set("B")
								f.Intrinsic.Control.ElseIf(v.Local.sSchedDir.Trim,=,"2")
									V.Local.sSched.Set("F")
								f.Intrinsic.Control.EndIf		
								
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","PRIORITY",V.Local.iCnt,V.Local.sPriority)
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","NewWC",V.Local.iCnt,V.Local.sWC)
								'clear fields before reschedule
								F.Data.DataTable.SetValue("dtAll",v.Local.iCnt,"Sel",False)
								F.Data.DataTable.SetValue("dtAll",v.Local.iCnt,"NewWC","")	
								
								F.Intrinsic.Control.If(V.Local.sWC,=,"")
									Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","WORKCENTER",V.Local.iCnt,V.Local.sWC)
								F.Intrinsic.Control.EndIf
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","DATE_DUE",V.Local.iCnt,V.Local.sDueDate)
								F.Intrinsic.String.Format(V.Local.sDueDate,"MMDDYY",V.Local.sDueDate)
								Gui.FrmMaster.GsGCAll.GetCellValueByColumnName("gvAll","DATE_START",V.Local.iCnt,V.Local.sStartDate)
								F.Intrinsic.String.Format(V.Local.sStartDate,"MMDDYY",V.Local.sStartDate)

								F.Intrinsic.String.Build("UPDATE JOB_HEADER SET PRIORITY = '{0}',DATE_DUE = '{1}' WHERE JOB = '{2}' AND SUFFIX = '{3}';",V.Local.sPriority,V.Local.sDueDate,V.Local.sJob,V.Local.sSuffix,V.Local.sSQL)
								F.ODBC.Connection!con.Execute(V.Local.sSQL)

								F.Intrinsic.String.Build("SELECT WC_NAME,STANDARD_COST,FLOAT,SCHED_PCT_MOD,CREWSIZE,NO_MACHINES,PROJ_GROUP FROM WORKCENTERS WHERE MACHINE = '{0}';",V.Local.sWC.Trim,V.Local.sSQL)
								F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
								F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
								V.Local.sWCDesc.Set(V.Local.sRet(0))
								F.Intrinsic.String.Replace(V.Local.sWCDesc,"'","''",V.Local.sWCDesc)
								V.Local.fWCRate.Set(V.Local.sRet(1))
								V.Local.fWCFloat.Set(V.Local.sRet(2))
								V.Local.fWCPerMod.Set(V.Local.sRet(3))
								V.Local.fWCCrewSize.Set(V.Local.sRet(4))
								F.Intrinsic.String.Build("UPDATE JOB_OPERATIONS SET PART = '{0}',DESCRIPTION = '{1}',BURDEN = '{2}',CREW_SIZE = '{3}' WHERE JOB = '{4}' AND SUFFIX = '{5}' AND SEQ = '{6}';",V.Local.sWC.Trim,V.Local.sWCDesc,V.Local.fWCRate,V.Local.fWCCrewSize,V.Local.sJob,V.Local.sSuffix,V.Local.sSeq,V.Local.sSQL)
								F.ODBC.Connection!con.Execute(V.Local.sSQL)
								F.Intrinsic.String.Build("UPDATE SCHED_WO_SUPP SET POST_FLOAT = '{0}',PERC_MODIFIER = '{1}' WHERE WO = '{2}' AND WO_SUFFIX = '{3}' AND WO_SEQ = '{4}';",V.Local.fWCFloat,V.Local.fWCPerMod,V.Local.sJob,V.Local.sSuffix,V.Local.sSeq,V.Local.sSQL)
								F.ODBC.Connection!con.Execute(V.Local.sSQL)

								F.Intrinsic.String.Build("{0}!*!{1}!*!{2}!*!{3}!*!!*!{4}",V.Local.sStartDate,V.Local.sDueDate,V.Local.sJob,V.Local.sSuffix,V.Local.sSched,V.Local.sParams500030)
								F.Global.General.CallWrapperSync(500030,V.Local.sParams500030)
							F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.Next(V.Local.iCnt)
				F.Intrinsic.Control.EndIf
				Gui.FrmMaster.GsGCAll.SetGridviewProperty("gvAll", "Multiselectmode", 1)
				Gui.FrmMaster.GsGCAll.SelectCell("gvAll", 2, 2, true)
				F.Intrinsic.Control.CallSub(enablescreen)
				'F.Intrinsic.Control.CallSub(cmdrefresh_click)
				Gui.FrmMaster.lblStatus.Visible(False)
				Gui.FrmMaster.pbStatus.Visible(False)
		F.Intrinsic.Control.EndSelect
	'F.Intrinsic.Control.EndIf	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSched_Click.End

Program.Sub.cmdPrint_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.srptLoc.Declare(String)
	V.Local.iBIRunId.Declare(Long)
	V.Local.iLogID.Declare(Long)
	V.Local.iRptId.Declare(Long)
	v.Local.sValues.Declare(String)
	v.Local.iRet.Declare(Long)
	V.Local.sParams.Declare(String)
	V.Local.ssel.Declare
	v.Local.sFilter.Declare
	V.Local.iCnt.Declare
	V.Local.sTemp.Declare

	F.Data.DataView.ToDataTable("dtAll","dvAll","dtPrint")

	'Add terminal number as column
	f.Data.Datatable.AddColumn("dtPrint","TERMINAL","string",v.Caller.Terminal)
	
	F.Intrinsic.Control.If(V.Screen.FrmMaster!optView.Value,=,False)
		F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist.Value,=,1)
			F.Intrinsic.String.Build("Delete GCG_5987_MasterSched where TERMINAL='{0}'",v.Caller.Terminal.RTrim,v.Local.ssel)
			F.ODBC.Connection!con.Execute(v.Local.ssel)
			f.Data.Datatable.SaveToDB("dtPrint","con","GCG_5987_MasterSched","JOB*!*SUFFIX*!*SEQ*!*TERMINAL",128,"TERMINAL@!@TERMINAL*!*JOB@!@JOB*!*SUFFIX@!@SUFFIX*!*SEQ@!@SEQ*!*PULLED@!@PULLED*!*WORKCENTER@!@WORKCENTER*!*SEQ_DATE_DUE@!@SEQ_DATE_DUE*!*DISPLAY_PART@!@DISPLAY_PART*!*PART_DESCRIPTION@!@PART_DESCRIPTION*!*QTY_ORDER@!@QTY_ORDER*!*PCS_REM1@!@PCS_REM1*!*SEQ_PCS_REM@!@SEQ_PCS_REM*!*REM_STD_HRS@!@REM_STD_HRS*!*PRIORITY5941@!@PRIORITY5941*!*PALLET@!@PALLET*!*PULLED@!@PULLED*!*WO_NOTE@!@WO_NOTE*!*RANK@!@RANK*!*LOCATION@!@LOCATION*!*DATE_DUE@!@WO_DATE_DUE*!*CUR_OPER@!@CUR_OPER")
			F.Intrinsic.String.Concat(V.Caller.BusintDir,"\Custom\GCG_5987_MasterSchedule.rpt",V.Local.srptLoc)
			F.Global.BI.InitializeReport("GCG_5987_MasterSchedule",V.Local.srptLoc,V.Local.iRptId)
			F.Global.BI.GetRunID(v.Local.iBIRunId)
			f.Global.BI.startlogging(v.Local.iBIRunId,v.Local.iRptId,-1,"",v.Local.iLogID)
			V.Local.sParams.Set("TERMINAL")
			V.Local.sValues.Set(v.Caller.Terminal)
			F.Global.BI.StopLogging(v.Local.iLogID)
			
			F.Global.BI.RunReportPreProcessor(V.Local.iBIRunId,V.Local.iLogID,V.Local.sParams,V.Local.sValues,V.Local.iRptId,0,False,"",1,"",-1,"","",V.Local.iRet)
		f.Intrinsic.Control.EndIf	
		F.Intrinsic.Control.If(V.Screen.FrmMaster!chkBarcode.Value,=,1)
			F.Intrinsic.String.Build("Delete GCG_5987_WCDISPATCH where TERMINAL='{0}'",v.Caller.Terminal.RTrim,v.Local.ssel)
			F.ODBC.Connection!con.Execute(v.Local.ssel)
			f.Data.Datatable.SaveToDB("dtPrint","con","GCG_5987_WCDISPATCH","JOB*!*SUFFIX*!*SEQ*!*TERMINAL",128,"TERMINAL@!@TERMINAL*!*JOB@!@JOB*!*SUFFIX@!@SUFFIX*!*SEQ@!@SEQ*!*PULLED@!@PULLED*!*WORKCENTER@!@WORKCENTER*!*SEQ_DATE_DUE@!@SEQ_DATE_DUE*!*DATE_DUE@!@WO_DATE_DUE*!*DISPLAY_PART@!@DISPLAY_PART*!*PART_DESCRIPTION@!@PART_DESCRIPTION*!*DESCRIPTION@!@DESCRIPTION*!*QTY_ORDER@!@QTY_ORDER*!*PCS_REM1@!@PCS_REM1*!*SEQ_PCS_REM@!@SEQ_PCS_REM*!*REM_STD_HRS@!@REM_STD_HRS*!*PRIORITY5941@!@PRIORITY5941*!*PALLET@!@PALLET*!*PULLED@!@PULLED*!*WO_NOTE@!@WO_NOTE*!*RANK@!@RANK*!*LOCATION@!@LOCATION")
			F.Intrinsic.String.Concat(V.Caller.BusintDir,"\Custom\GCG_5987_WCDISPATCH.rpt",V.Local.srptLoc)
			F.Global.BI.InitializeReport("GCG_5987_WCDispatch",V.Local.srptLoc,V.Local.iRptId)
			F.Global.BI.GetRunID(v.Local.iBIRunId)
			f.Global.BI.startlogging(v.Local.iBIRunId,v.Local.iRptId,-1,"",v.Local.iLogID)
			V.Local.sParams.Set("TERMINAL")
			V.Local.sValues.Set(v.Caller.Terminal)
			F.Global.BI.StopLogging(v.Local.iLogID)
			F.Global.BI.RunReportPreProcessor(V.Local.iBIRunId,V.Local.iLogID,V.Local.sParams,V.Local.sValues,V.Local.iRptId,0,False,"",1,"",-1,"","",V.Local.iRet)
		f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Screen.FrmMaster!chkPicklist2.Value,=,1)
			f.Data.DataView.ToDataTable("dtAll","dvAll","dtPickList")
			f.Data.DataView.Create("dtPickList","dvPickList")
			V.Local.sFilter.Set("PALLET <> '' AND PULLED = false")
			f.Data.DataView.SetFilter("dtPickList","dvPickList",v.Local.sFilter)
			f.Data.DataView.ToDataTable("dtPickList","dvPickList","dtPrintPickList")
			F.Intrinsic.Control.If(v.DataTable.dtPrintPickList.RowCount,<>,0)
				'Add terminal number as column
				f.Data.Datatable.AddColumn("dtPrintPickList","TERMINAL","string",v.Caller.Terminal)		
				F.Intrinsic.String.Build("Delete GCG_5987_PICKLIST where TERMINAL='{0}'",v.Caller.Terminal.RTrim,v.Local.ssel)
				F.ODBC.Connection!con.Execute(v.Local.ssel)
				f.Data.Datatable.SaveToDB("dtPrintPickList","con","GCG_5987_Picklist","JOB*!*SUFFIX*!*SEQ*!*TERMINAL",128,"TERMINAL@!@TERMINAL*!*JOB@!@JOB*!*SUFFIX@!@SUFFIX*!*SEQ@!@SEQ*!*PULLED@!@PULLED*!*WORKCENTER@!@WORKCENTER*!*SEQ_DATE_DUE@!@SEQ_DATE_DUE*!*DATE_DUE@!@WO_DATE_DUE*!*DISPLAY_PART@!@DISPLAY_PART*!*PART_DESCRIPTION@!@PART_DESCRIPTION*!*DESCRIPTION@!@DESCRIPTION*!*QTY_ORDER@!@QTY_ORDER*!*PCS_REM1@!@PCS_REM1*!*SEQ_PCS_REM@!@SEQ_PCS_REM*!*REM_STD_HRS@!@REM_STD_HRS*!*PRIORITY5941@!@PRIORITY5941*!*PALLET@!@PALLET*!*PULLED@!@PULLED*!*WO_NOTE@!@WO_NOTE*!*RANK@!@RANK*!*LOCATION@!@LOCATION")
				F.Intrinsic.String.Concat(V.Caller.BusintDir,"\Custom\GCG_5987_Picklist.rpt",V.Local.srptLoc)
				F.Global.BI.InitializeReport("GCG_5987_Picklist",V.Local.srptLoc,V.Local.iRptId)
				F.Global.BI.GetRunID(v.Local.iBIRunId)
				f.Global.BI.startlogging(v.Local.iBIRunId,v.Local.iRptId,-1,"",v.Local.iLogID)
				V.Local.sParams.Set("TERMINAL")
				V.Local.sValues.Set(v.Caller.Terminal)
				F.Global.BI.StopLogging(v.Local.iLogID)
				F.Global.BI.RunReportPreProcessor(V.Local.iBIRunId,V.Local.iLogID,V.Local.sParams,V.Local.sValues,V.Local.iRptId,0,False,"",1,"",-1,"","",V.Local.iRet)
				
				'update pulled flag for jobs in material picklist in table GCG_5941_WO_NOTES
				F.Data.Datatable.SetValue("dtPrintPickList",-1,"PULLED","True")
				f.Data.Datatable.SaveToDB("dtPrintPickList","con","GCG_5987_WO_NOTES","JOB*!*SUFFIX*!*SEQ",256,"PULLED@!@PULLED*!*JOB@!@JOB*!*SUFFIX@!@SUFFIX*!*SEQ@!@SEQUENCE")
				'create Datatable of distinct Jobs to generate barcode WO router report
				
				f.Data.Dataview.SetSort("dtPickList","dvPickList","Job,Suffix ASC")
				f.Data.DataView.ToDataTableDistinct("dtPickList","dvPickList","dtPrintWOs","JOB*!*SUFFIX")
				
				F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPrintWOs.RowCount--,1)				
					f.Intrinsic.String.Build("{0}!*!{1}!*!1811",V.DataTable.dtPrintWOs(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtPrintWOs(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sTemp)
					F.Global.General.CallWrapperSync(900100,v.Local.sTemp)
					Function.Intrinsic.UI.Sleep(5)
				F.Intrinsic.Control.Next(V.Local.iCnt)	
				f.Data.Datatable.Close("dtPrintWOs")
				f.Data.Datatable.Close("dtPrintPickList")
				f.Data.Datatable.Close("dtPickList")			
				f.Intrinsic.Control.CallSub("cmdRefresh_Click")					
			f.Intrinsic.Control.Else			
				f.Data.Datatable.Close("dtPrintPickList")
				f.Data.Datatable.Close("dtPickList")	
			f.Intrinsic.Control.EndIf
					
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.cmdPrint_Click.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.FrmMaster..ContextMenuCreate("ctxWCDispatch")
	Gui.FrmMaster.GsGCAll.ContextMenuAttach("ctxWCDispatch")
	Gui.FrmMaster..ContextMenuAddItem("ctxWCDispatch","Reset Columns",0,"Reset Columns")
	Gui.FrmMaster..ContextMenuSetItemEventHandler("ctxWCDispatch","Reset Columns","cmdResetGsGC_Click")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.Comments.Start
${$0$}$GAB_5669_MasterSched_GM$}$JoeyT & AGV$}$08/22/2016 1:27:19 PM$}$False
${$5$}$20.1.8315.16327$}$1
${$6$}$bbaker$}$20221109142548965$}$pM7xsHplA2E9VCTenDTJ47gi1rF/t66WXfJA0MaxUp8yu4EpPlabI5RQ1F3L3arm+X72dXv8y4k=
Program.Sub.Comments.End
